{
  "contractName": "Idea",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaTitle",
          "type": "string"
        },
        {
          "name": "_ideaType",
          "type": "string"
        },
        {
          "name": "_content",
          "type": "string"
        },
        {
          "name": "_category",
          "type": "string"
        },
        {
          "name": "_initialValue",
          "type": "uint256"
        },
        {
          "name": "_setForSale",
          "type": "bool"
        }
      ],
      "name": "addIdea",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getMsg",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getIdea",
      "outputs": [
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "ideaType",
          "type": "string"
        },
        {
          "name": "content",
          "type": "string"
        },
        {
          "name": "category",
          "type": "string"
        },
        {
          "name": "initialValue",
          "type": "uint256"
        },
        {
          "name": "actualValue",
          "type": "uint256"
        },
        {
          "name": "setForSale",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getIdeasLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getIdea\",\"outputs\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"ideaType\",\"type\":\"string\"},{\"name\":\"content\",\"type\":\"string\"},{\"name\":\"category\",\"type\":\"string\"},{\"name\":\"initialValue\",\"type\":\"uint256\"},{\"name\":\"actualValue\",\"type\":\"uint256\"},{\"name\":\"setForSale\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaTitle\",\"type\":\"string\"},{\"name\":\"_ideaType\",\"type\":\"string\"},{\"name\":\"_content\",\"type\":\"string\"},{\"name\":\"_category\",\"type\":\"string\"},{\"name\":\"_initialValue\",\"type\":\"uint256\"},{\"name\":\"_setForSale\",\"type\":\"bool\"}],\"name\":\"addIdea\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getMsg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIdeasLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol\":\"Idea\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol\":{\"keccak256\":\"0x7f2e8dcde764347ed69b501fcb10789205c391db433c23312ad53af94fd3b5c6\",\"urls\":[\"bzzr://1fcabecc98a4a95f1f6cab7c4e2293c3abd22d09825b35073199795746588c87\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xac2eacd7e7762e275442f28f21d821544df5aae2ed7698af13be8c41b7005e2e\",\"urls\":[\"bzzr://43e901f6f210568ebc1d3591da3ce6a9d10796b854767a9c6e3da10305a8a332\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzzr://fc2ba15143ce3a00268ecd15fc98eb2469b18bfe27a64bbab0ac6446f161c739\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf151df411bbf4eaef1fc8e8480cd10c2cd985f1a36517e63981517610213efc1\",\"urls\":[\"bzzr://9bca20c0c1208be8f31fc7a73faccd2fca4c5f84dc0a432ae2e066970551db34\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xce48937a8007c580b8e2e35705738c922dd17540de89ebee6df06d2917a3f9fc\",\"urls\":[\"bzzr://de494d3843e2c151aa108782382720b5d9f4531f0aa620a4244ca12fc1f8a780\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600555620000216301ffc9a760e01b6200003f60201b60201c565b620000396380ac58cd60e01b6200003f60201b60201c565b6200018c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620000ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a29062000159565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600062000126601c836200017b565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190508181036000830152620001748162000117565b9050919050565b600082825260208201905092915050565b612775806200019c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b5fdeb2311610066578063b5fdeb2314610271578063b88d4fde1461028f578063c684477d146102ab578063e985e9c5146102c9576100ea565b806370a0823114610209578063a22cb46514610239578063afa945cc14610255576100ea565b806323b872dd116100c857806323b872dd1461016b57806342842e0e1461018757806344de6b2f146101a35780636352211e146101d9576100ea565b806301ffc9a7146100ef578063081812fc1461011f578063095ea7b31461014f575b600080fd5b61010960048036036101049190810190611aa9565b6102f9565b6040516101169190612284565b60405180910390f35b61013960048036036101349190810190611be4565b610360565b604051610146919061221d565b60405180910390f35b61016960048036036101649190810190611a6d565b6103e5565b005b61018560048036036101809190810190611967565b610592565b005b6101a1600480360361019c9190810190611967565b6105eb565b005b6101bd60048036036101b89190810190611be4565b61060b565b6040516101d0979695949392919061229f565b60405180910390f35b6101f360048036036101ee9190810190611be4565b6109cf565b604051610200919061221d565b60405180910390f35b610223600480360361021e9190810190611902565b610a81565b604051610230919061250a565b60405180910390f35b610253600480360361024e9190810190611a31565b610b40565b005b61026f600480360361026a9190810190611afb565b610cac565b005b610279610e4a565b604051610286919061221d565b60405180910390f35b6102a960048036036102a491908101906119b6565b610e52565b005b6102b3610eae565b6040516102c0919061250a565b60405180910390f35b6102e360048036036102de919081019061192b565b610ebb565b6040516102f09190612284565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600061036b82610f4f565b6103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a19061246a565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006103f0826109cf565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610461576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610458906124ca565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104a157506104a08133610ebb565b5b6104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d7906123ea565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b61059c3382610fc1565b6105db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d2906124ea565b60405180910390fd5b6105e683838361109f565b505050565b61060683838360405180602001604052806000815250610e52565b505050565b606080606080600080600080600090505b6006805490508110156109c257886006828154811061063757fe5b90600052602060002090600802016000015414156109b5576006818154811061065c57fe5b90600052602060002090600802016001016006828154811061067a57fe5b90600052602060002090600802016002016006838154811061069857fe5b9060005260206000209060080201600301600684815481106106b657fe5b9060005260206000209060080201600401600685815481106106d457fe5b906000526020600020906008020160050154600686815481106106f357fe5b9060005260206000209060080201600601546006878154811061071257fe5b906000526020600020906008020160070160009054906101000a900460ff16868054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c65780601f1061079b576101008083540402835291602001916107c6565b820191906000526020600020905b8154815290600101906020018083116107a957829003601f168201915b50505050509650858054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108625780601f1061083757610100808354040283529160200191610862565b820191906000526020600020905b81548152906001019060200180831161084557829003601f168201915b50505050509550848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108fe5780601f106108d3576101008083540402835291602001916108fe565b820191906000526020600020905b8154815290600101906020018083116108e157829003601f168201915b50505050509450838054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561099a5780601f1061096f5761010080835404028352916020019161099a565b820191906000526020600020905b81548152906001019060200180831161097d57829003601f168201915b505050505093509750975097509750975097509750506109c4565b808060010191505061061c565b505b919395979092949650565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f9061242a565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae99061240a565b60405180910390fd5b610b39600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206112ce565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610baf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba69061238a565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ca09190612284565b60405180910390a35050565b610cb7600554610f4f565b15610cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cee906124aa565b60405180910390fd5b610d03336005546112dc565b610d0b611705565b604051806101000160405280600554815260200188815260200187815260200186815260200185815260200184815260200160008152602001831515815250905060068190806001815401808255809150509060018203906000526020600020906008020160009091929091909150600082015181600001556020820151816001019080519060200190610da092919061174c565b506040820151816002019080519060200190610dbd92919061174c565b506060820151816003019080519060200190610dda92919061174c565b506080820151816004019080519060200190610df792919061174c565b5060a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff02191690831515021790555050505060056000815480929190600101919050555050505050505050565b600033905090565b610e5d848484610592565b610e698484848461148e565b610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f9061232a565b60405180910390fd5b50505050565b6000600680549050905090565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610fcc82610f4f565b61100b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611002906123ca565b60405180910390fd5b6000611016836109cf565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061108557508373ffffffffffffffffffffffffffffffffffffffff1661106d84610360565b73ffffffffffffffffffffffffffffffffffffffff16145b8061109657506110958185610ebb565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166110bf826109cf565b73ffffffffffffffffffffffffffffffffffffffff1614611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110c9061248a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117c9061236a565b60405180910390fd5b61118e816115a5565b6111d5600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611663565b61121c600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611686565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561134c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113439061244a565b60405180910390fd5b61135581610f4f565b15611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c9061234a565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061142e600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611686565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006114af8473ffffffffffffffffffffffffffffffffffffffff1661169c565b6114bc576001905061159d565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016114fd9493929190612238565b602060405180830381600087803b15801561151757600080fd5b505af115801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061154f9190810190611ad2565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116605760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61167b600182600001546116af90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b6000828211156116f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116eb906123aa565b60405180910390fd5b600082840390508091505092915050565b604051806101000160405280600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061178d57805160ff19168380011785556117bb565b828001600101855582156117bb579182015b828111156117ba57825182559160200191906001019061179f565b5b5090506117c891906117cc565b5090565b6117ee91905b808211156117ea5760008160009055506001016117d2565b5090565b90565b600081359050611800816126df565b92915050565b600081359050611815816126f6565b92915050565b60008135905061182a8161270d565b92915050565b60008151905061183f8161270d565b92915050565b600082601f83011261185657600080fd5b813561186961186482612552565b612525565b9150808252602083016020830185838301111561188557600080fd5b61189083828461268c565b50505092915050565b600082601f8301126118aa57600080fd5b81356118bd6118b88261257e565b612525565b915080825260208301602083018583830111156118d957600080fd5b6118e483828461268c565b50505092915050565b6000813590506118fc81612724565b92915050565b60006020828403121561191457600080fd5b6000611922848285016117f1565b91505092915050565b6000806040838503121561193e57600080fd5b600061194c858286016117f1565b925050602061195d858286016117f1565b9150509250929050565b60008060006060848603121561197c57600080fd5b600061198a868287016117f1565b935050602061199b868287016117f1565b92505060406119ac868287016118ed565b9150509250925092565b600080600080608085870312156119cc57600080fd5b60006119da878288016117f1565b94505060206119eb878288016117f1565b93505060406119fc878288016118ed565b925050606085013567ffffffffffffffff811115611a1957600080fd5b611a2587828801611845565b91505092959194509250565b60008060408385031215611a4457600080fd5b6000611a52858286016117f1565b9250506020611a6385828601611806565b9150509250929050565b60008060408385031215611a8057600080fd5b6000611a8e858286016117f1565b9250506020611a9f858286016118ed565b9150509250929050565b600060208284031215611abb57600080fd5b6000611ac98482850161181b565b91505092915050565b600060208284031215611ae457600080fd5b6000611af284828501611830565b91505092915050565b60008060008060008060c08789031215611b1457600080fd5b600087013567ffffffffffffffff811115611b2e57600080fd5b611b3a89828a01611899565b965050602087013567ffffffffffffffff811115611b5757600080fd5b611b6389828a01611899565b955050604087013567ffffffffffffffff811115611b8057600080fd5b611b8c89828a01611899565b945050606087013567ffffffffffffffff811115611ba957600080fd5b611bb589828a01611899565b9350506080611bc689828a016118ed565b92505060a0611bd789828a01611806565b9150509295509295509295565b600060208284031215611bf657600080fd5b6000611c04848285016118ed565b91505092915050565b611c1681612656565b82525050565b611c25816125e2565b82525050565b611c34816125f4565b82525050565b6000611c45826125aa565b611c4f81856125c0565b9350611c5f81856020860161269b565b611c68816126ce565b840191505092915050565b6000611c7e826125b5565b611c8881856125d1565b9350611c9881856020860161269b565b611ca1816126ce565b840191505092915050565b6000611cb96032836125d1565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000611d1f601c836125d1565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000611d5f6024836125d1565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611dc56019836125d1565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000611e05601e836125d1565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b6000611e45602c836125d1565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000611eab6038836125d1565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000611f11602a836125d1565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f776029836125d1565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000611fdd6020836125d1565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061201d602c836125d1565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006120836029836125d1565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006120e9602b836125d1565b91507f4944454120434f4e5452414354204552524f523a204964656120494420616c7260008301527f65616479206578697374730000000000000000000000000000000000000000006020830152604082019050919050565b600061214f6021836125d1565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006121b56031836125d1565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6122178161264c565b82525050565b60006020820190506122326000830184611c1c565b92915050565b600060808201905061224d6000830187611c0d565b61225a6020830186611c1c565b612267604083018561220e565b81810360608301526122798184611c3a565b905095945050505050565b60006020820190506122996000830184611c2b565b92915050565b600060e08201905081810360008301526122b9818a611c73565b905081810360208301526122cd8189611c73565b905081810360408301526122e18188611c73565b905081810360608301526122f58187611c73565b9050612304608083018661220e565b61231160a083018561220e565b61231e60c0830184611c2b565b98975050505050505050565b6000602082019050818103600083015261234381611cac565b9050919050565b6000602082019050818103600083015261236381611d12565b9050919050565b6000602082019050818103600083015261238381611d52565b9050919050565b600060208201905081810360008301526123a381611db8565b9050919050565b600060208201905081810360008301526123c381611df8565b9050919050565b600060208201905081810360008301526123e381611e38565b9050919050565b6000602082019050818103600083015261240381611e9e565b9050919050565b6000602082019050818103600083015261242381611f04565b9050919050565b6000602082019050818103600083015261244381611f6a565b9050919050565b6000602082019050818103600083015261246381611fd0565b9050919050565b6000602082019050818103600083015261248381612010565b9050919050565b600060208201905081810360008301526124a381612076565b9050919050565b600060208201905081810360008301526124c3816120dc565b9050919050565b600060208201905081810360008301526124e381612142565b9050919050565b60006020820190508181036000830152612503816121a8565b9050919050565b600060208201905061251f600083018461220e565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561254857600080fd5b8060405250919050565b600067ffffffffffffffff82111561256957600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561259557600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006125ed8261262c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061266182612668565b9050919050565b60006126738261267a565b9050919050565b60006126858261262c565b9050919050565b82818337600083830152505050565b60005b838110156126b957808201518184015260208101905061269e565b838111156126c8576000848401525b50505050565b6000601f19601f8301169050919050565b6126e8816125e2565b81146126f357600080fd5b50565b6126ff816125f4565b811461270a57600080fd5b50565b61271681612600565b811461272157600080fd5b50565b61272d8161264c565b811461273857600080fd5b5056fea265627a7a7230582094b199caf02f8431dc4dfc52e01f0bec8f6ed46b8a3e71327eeab5b3a65dabf36c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b5fdeb2311610066578063b5fdeb2314610271578063b88d4fde1461028f578063c684477d146102ab578063e985e9c5146102c9576100ea565b806370a0823114610209578063a22cb46514610239578063afa945cc14610255576100ea565b806323b872dd116100c857806323b872dd1461016b57806342842e0e1461018757806344de6b2f146101a35780636352211e146101d9576100ea565b806301ffc9a7146100ef578063081812fc1461011f578063095ea7b31461014f575b600080fd5b61010960048036036101049190810190611aa9565b6102f9565b6040516101169190612284565b60405180910390f35b61013960048036036101349190810190611be4565b610360565b604051610146919061221d565b60405180910390f35b61016960048036036101649190810190611a6d565b6103e5565b005b61018560048036036101809190810190611967565b610592565b005b6101a1600480360361019c9190810190611967565b6105eb565b005b6101bd60048036036101b89190810190611be4565b61060b565b6040516101d0979695949392919061229f565b60405180910390f35b6101f360048036036101ee9190810190611be4565b6109cf565b604051610200919061221d565b60405180910390f35b610223600480360361021e9190810190611902565b610a81565b604051610230919061250a565b60405180910390f35b610253600480360361024e9190810190611a31565b610b40565b005b61026f600480360361026a9190810190611afb565b610cac565b005b610279610e4a565b604051610286919061221d565b60405180910390f35b6102a960048036036102a491908101906119b6565b610e52565b005b6102b3610eae565b6040516102c0919061250a565b60405180910390f35b6102e360048036036102de919081019061192b565b610ebb565b6040516102f09190612284565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600061036b82610f4f565b6103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a19061246a565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006103f0826109cf565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610461576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610458906124ca565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104a157506104a08133610ebb565b5b6104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d7906123ea565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b61059c3382610fc1565b6105db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d2906124ea565b60405180910390fd5b6105e683838361109f565b505050565b61060683838360405180602001604052806000815250610e52565b505050565b606080606080600080600080600090505b6006805490508110156109c257886006828154811061063757fe5b90600052602060002090600802016000015414156109b5576006818154811061065c57fe5b90600052602060002090600802016001016006828154811061067a57fe5b90600052602060002090600802016002016006838154811061069857fe5b9060005260206000209060080201600301600684815481106106b657fe5b9060005260206000209060080201600401600685815481106106d457fe5b906000526020600020906008020160050154600686815481106106f357fe5b9060005260206000209060080201600601546006878154811061071257fe5b906000526020600020906008020160070160009054906101000a900460ff16868054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c65780601f1061079b576101008083540402835291602001916107c6565b820191906000526020600020905b8154815290600101906020018083116107a957829003601f168201915b50505050509650858054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108625780601f1061083757610100808354040283529160200191610862565b820191906000526020600020905b81548152906001019060200180831161084557829003601f168201915b50505050509550848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108fe5780601f106108d3576101008083540402835291602001916108fe565b820191906000526020600020905b8154815290600101906020018083116108e157829003601f168201915b50505050509450838054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561099a5780601f1061096f5761010080835404028352916020019161099a565b820191906000526020600020905b81548152906001019060200180831161097d57829003601f168201915b505050505093509750975097509750975097509750506109c4565b808060010191505061061c565b505b919395979092949650565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f9061242a565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae99061240a565b60405180910390fd5b610b39600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206112ce565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610baf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba69061238a565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ca09190612284565b60405180910390a35050565b610cb7600554610f4f565b15610cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cee906124aa565b60405180910390fd5b610d03336005546112dc565b610d0b611705565b604051806101000160405280600554815260200188815260200187815260200186815260200185815260200184815260200160008152602001831515815250905060068190806001815401808255809150509060018203906000526020600020906008020160009091929091909150600082015181600001556020820151816001019080519060200190610da092919061174c565b506040820151816002019080519060200190610dbd92919061174c565b506060820151816003019080519060200190610dda92919061174c565b506080820151816004019080519060200190610df792919061174c565b5060a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff02191690831515021790555050505060056000815480929190600101919050555050505050505050565b600033905090565b610e5d848484610592565b610e698484848461148e565b610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f9061232a565b60405180910390fd5b50505050565b6000600680549050905090565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610fcc82610f4f565b61100b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611002906123ca565b60405180910390fd5b6000611016836109cf565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061108557508373ffffffffffffffffffffffffffffffffffffffff1661106d84610360565b73ffffffffffffffffffffffffffffffffffffffff16145b8061109657506110958185610ebb565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166110bf826109cf565b73ffffffffffffffffffffffffffffffffffffffff1614611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110c9061248a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117c9061236a565b60405180910390fd5b61118e816115a5565b6111d5600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611663565b61121c600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611686565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561134c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113439061244a565b60405180910390fd5b61135581610f4f565b15611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c9061234a565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061142e600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611686565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006114af8473ffffffffffffffffffffffffffffffffffffffff1661169c565b6114bc576001905061159d565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016114fd9493929190612238565b602060405180830381600087803b15801561151757600080fd5b505af115801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061154f9190810190611ad2565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116605760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61167b600182600001546116af90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b6000828211156116f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116eb906123aa565b60405180910390fd5b600082840390508091505092915050565b604051806101000160405280600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061178d57805160ff19168380011785556117bb565b828001600101855582156117bb579182015b828111156117ba57825182559160200191906001019061179f565b5b5090506117c891906117cc565b5090565b6117ee91905b808211156117ea5760008160009055506001016117d2565b5090565b90565b600081359050611800816126df565b92915050565b600081359050611815816126f6565b92915050565b60008135905061182a8161270d565b92915050565b60008151905061183f8161270d565b92915050565b600082601f83011261185657600080fd5b813561186961186482612552565b612525565b9150808252602083016020830185838301111561188557600080fd5b61189083828461268c565b50505092915050565b600082601f8301126118aa57600080fd5b81356118bd6118b88261257e565b612525565b915080825260208301602083018583830111156118d957600080fd5b6118e483828461268c565b50505092915050565b6000813590506118fc81612724565b92915050565b60006020828403121561191457600080fd5b6000611922848285016117f1565b91505092915050565b6000806040838503121561193e57600080fd5b600061194c858286016117f1565b925050602061195d858286016117f1565b9150509250929050565b60008060006060848603121561197c57600080fd5b600061198a868287016117f1565b935050602061199b868287016117f1565b92505060406119ac868287016118ed565b9150509250925092565b600080600080608085870312156119cc57600080fd5b60006119da878288016117f1565b94505060206119eb878288016117f1565b93505060406119fc878288016118ed565b925050606085013567ffffffffffffffff811115611a1957600080fd5b611a2587828801611845565b91505092959194509250565b60008060408385031215611a4457600080fd5b6000611a52858286016117f1565b9250506020611a6385828601611806565b9150509250929050565b60008060408385031215611a8057600080fd5b6000611a8e858286016117f1565b9250506020611a9f858286016118ed565b9150509250929050565b600060208284031215611abb57600080fd5b6000611ac98482850161181b565b91505092915050565b600060208284031215611ae457600080fd5b6000611af284828501611830565b91505092915050565b60008060008060008060c08789031215611b1457600080fd5b600087013567ffffffffffffffff811115611b2e57600080fd5b611b3a89828a01611899565b965050602087013567ffffffffffffffff811115611b5757600080fd5b611b6389828a01611899565b955050604087013567ffffffffffffffff811115611b8057600080fd5b611b8c89828a01611899565b945050606087013567ffffffffffffffff811115611ba957600080fd5b611bb589828a01611899565b9350506080611bc689828a016118ed565b92505060a0611bd789828a01611806565b9150509295509295509295565b600060208284031215611bf657600080fd5b6000611c04848285016118ed565b91505092915050565b611c1681612656565b82525050565b611c25816125e2565b82525050565b611c34816125f4565b82525050565b6000611c45826125aa565b611c4f81856125c0565b9350611c5f81856020860161269b565b611c68816126ce565b840191505092915050565b6000611c7e826125b5565b611c8881856125d1565b9350611c9881856020860161269b565b611ca1816126ce565b840191505092915050565b6000611cb96032836125d1565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000611d1f601c836125d1565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000611d5f6024836125d1565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611dc56019836125d1565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000611e05601e836125d1565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b6000611e45602c836125d1565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000611eab6038836125d1565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000611f11602a836125d1565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f776029836125d1565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000611fdd6020836125d1565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061201d602c836125d1565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006120836029836125d1565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006120e9602b836125d1565b91507f4944454120434f4e5452414354204552524f523a204964656120494420616c7260008301527f65616479206578697374730000000000000000000000000000000000000000006020830152604082019050919050565b600061214f6021836125d1565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006121b56031836125d1565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6122178161264c565b82525050565b60006020820190506122326000830184611c1c565b92915050565b600060808201905061224d6000830187611c0d565b61225a6020830186611c1c565b612267604083018561220e565b81810360608301526122798184611c3a565b905095945050505050565b60006020820190506122996000830184611c2b565b92915050565b600060e08201905081810360008301526122b9818a611c73565b905081810360208301526122cd8189611c73565b905081810360408301526122e18188611c73565b905081810360608301526122f58187611c73565b9050612304608083018661220e565b61231160a083018561220e565b61231e60c0830184611c2b565b98975050505050505050565b6000602082019050818103600083015261234381611cac565b9050919050565b6000602082019050818103600083015261236381611d12565b9050919050565b6000602082019050818103600083015261238381611d52565b9050919050565b600060208201905081810360008301526123a381611db8565b9050919050565b600060208201905081810360008301526123c381611df8565b9050919050565b600060208201905081810360008301526123e381611e38565b9050919050565b6000602082019050818103600083015261240381611e9e565b9050919050565b6000602082019050818103600083015261242381611f04565b9050919050565b6000602082019050818103600083015261244381611f6a565b9050919050565b6000602082019050818103600083015261246381611fd0565b9050919050565b6000602082019050818103600083015261248381612010565b9050919050565b600060208201905081810360008301526124a381612076565b9050919050565b600060208201905081810360008301526124c3816120dc565b9050919050565b600060208201905081810360008301526124e381612142565b9050919050565b60006020820190508181036000830152612503816121a8565b9050919050565b600060208201905061251f600083018461220e565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561254857600080fd5b8060405250919050565b600067ffffffffffffffff82111561256957600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561259557600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006125ed8261262c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061266182612668565b9050919050565b60006126738261267a565b9050919050565b60006126858261262c565b9050919050565b82818337600083830152505050565b60005b838110156126b957808201518184015260208101905061269e565b838111156126c8576000848401525b50505050565b6000601f19601f8301169050919050565b6126e8816125e2565b81146126f357600080fd5b50565b6126ff816125f4565b811461270a57600080fd5b50565b61271681612600565b811461272157600080fd5b50565b61272d8161264c565b811461273857600080fd5b5056fea265627a7a7230582094b199caf02f8431dc4dfc52e01f0bec8f6ed46b8a3e71327eeab5b3a65dabf36c6578706572696d656e74616cf50037",
  "sourceMap": "192:2220:0:-;;;464:1;445:20;;718:40:3;385:10;737:20;;718:18;;;:40;;:::i;:::-;2220::6;2094:10;2239:20;;2220:18;;;:40;;:::i;:::-;192:2220:0;;1442:190:3;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;6:364:-1:-;;166:67;230:2;225:3;166:67;;;159:74;;266:66;262:1;257:3;253:11;246:87;361:2;356:3;352:12;345:19;;152:218;;;;378:407;;569:2;558:9;554:18;546:26;;619:9;613:4;609:20;605:1;594:9;590:17;583:47;644:131;770:4;644:131;;;636:139;;540:245;;;;793:163;;908:6;903:3;896:19;945:4;940:3;936:14;921:29;;889:67;;;;;192:2220:0;;;;;;;",
  "deployedSourceMap": "192:2220:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;192:2220:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4237:200:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3541:411;;;;;;;;;;;;;;;;:::i;:::-;;5877:285;;;;;;;;;;;;;;;;:::i;:::-;;6795:132;;;;;;;;;;;;;;;;:::i;:::-;;1144:516:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2897:223:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2471:207;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4730:243;;;;;;;;;;;;;;;;:::i;:::-;;531:522:0;;;;;;;;;;;;;;;;:::i;:::-;;1059:76;;;:::i;:::-;;;;;;;;;;;;;;;;7632:265:6;;;;;;;;;;;;;;;;:::i;:::-;;1666:95:0;;;:::i;:::-;;;;;;;;;;;;;;;;5295:145:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;915:133:3;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;4237:200:6:-;4296:7;4323:16;4331:7;4323;:16::i;:::-;4315:73;;;;;;;;;;;;;;;;;;;;;;4406:15;:24;4422:7;4406:24;;;;;;;;;;;;;;;;;;;;;4399:31;;4237:200;;;:::o;3541:411::-;3604:13;3620:16;3628:7;3620;:16::i;:::-;3604:32;;3660:5;3654:11;;:2;:11;;;;3646:57;;;;;;;;;;;;;;;;;;;;;;3736:5;3722:19;;:10;:19;;;:58;;;;3745:35;3762:5;3769:10;3745:16;:35::i;:::-;3722:58;3714:148;;;;;;;;;;;;;;;;;;;;;;3900:2;3873:15;:24;3889:7;3873:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3937:7;3933:2;3917:28;;3926:5;3917:28;;;;;;;;;;;;3541:411;;;:::o;5877:285::-;6019:39;6038:10;6050:7;6019:18;:39::i;:::-;6011:101;;;;;;;;;;;;;;;;;;;;;;6123:32;6137:4;6143:2;6147:7;6123:13;:32::i;:::-;5877:285;;;:::o;6795:132::-;6881:39;6898:4;6904:2;6908:7;6881:39;;;;;;;;;;;;:16;:39::i;:::-;6795:132;;;:::o;1144:516:0:-;1191:19;1211:22;1243:21;1274:22;1306:17;1333:16;1359:15;1391:6;1400:1;1391:10;;1386:264;1405:5;:12;;;;1403:1;:14;1386:264;;;1455:3;1440:5;1446:1;1440:8;;;;;;;;;;;;;;;;;;:11;;;:18;1437:201;;;1481:5;1487:1;1481:8;;;;;;;;;;;;;;;;;;:18;;1501:5;1507:1;1501:8;;;;;;;;;;;;;;;;;;:17;;1520:5;1526:1;1520:8;;;;;;;;;;;;;;;;;;:16;;1538:5;1544:1;1538:8;;;;;;;;;;;;;;;;;;:17;;1557:5;1563:1;1557:8;;;;;;;;;;;;;;;;;;:21;;;1580:5;1586:1;1580:8;;;;;;;;;;;;;;;;;;:20;;;1602:5;1608:1;1602:8;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;1473:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1437:201;1419:3;;;;;;;1386:264;;;;1144:516;;;;;;;;;;:::o;2897:223:6:-;2952:7;2971:13;2987:11;:20;2999:7;2987:20;;;;;;;;;;;;;;;;;;;;;2971:36;;3042:1;3025:19;;:5;:19;;;;3017:73;;;;;;;;;;;;;;;;;;;;;;3108:5;3101:12;;;2897:223;;;:::o;2471:207::-;2526:7;2570:1;2553:19;;:5;:19;;;;2545:74;;;;;;;;;;;;;;;;;;;;;;2637:34;:17;:24;2655:5;2637:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2630:41;;2471:207;;;:::o;4730:243::-;4815:10;4809:16;;:2;:16;;;;4801:54;;;;;;;;;;;;;;;;;;;;;;4903:8;4866:18;:30;4885:10;4866:30;;;;;;;;;;;;;;;:34;4897:2;4866:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4953:2;4926:40;;4941:10;4926:40;;;4957:8;4926:40;;;;;;;;;;;;;;;4730:243;;:::o;531:522:0:-;712:22;720:13;;712:7;:22::i;:::-;711:23;703:78;;;;;;;;;;;;;;;;;;;;;;791:32;797:10;809:13;;791:5;:32::i;:::-;878:19;;:::i;:::-;900:92;;;;;;;;905:13;;900:92;;;;920:10;900:92;;;;932:9;900:92;;;;943:8;900:92;;;;952:9;900:92;;;;963:13;900:92;;;;977:1;900:92;;;;980:11;900:92;;;;;878:114;;1002:5;1013:7;1002:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1002:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:13;;:15;;;;;;;;;;;;;531:522;;;;;;;:::o;1059:76::-;1093:7;1118:10;1111:17;;1059:76;:::o;7632:265:6:-;7738:31;7751:4;7757:2;7761:7;7738:12;:31::i;:::-;7787:48;7810:4;7816:2;7820:7;7829:5;7787:22;:48::i;:::-;7779:111;;;;;;;;;;;;;;;;;;;;;;7632:265;;;;:::o;1666:95:0:-;1714:4;1741:5;:12;;;;1729:25;;1666:95;:::o;5295:145:6:-;5375:4;5398:18;:25;5417:5;5398:25;;;;;;;;;;;;;;;:35;5424:8;5398:35;;;;;;;;;;;;;;;;;;;;;;;;;5391:42;;5295:145;;;;:::o;8092:152::-;8149:4;8165:13;8181:11;:20;8193:7;8181:20;;;;;;;;;;;;;;;;;;;;;8165:36;;8235:1;8218:19;;:5;:19;;;;8211:26;;;8092:152;;;:::o;8605:329::-;8690:4;8714:16;8722:7;8714;:16::i;:::-;8706:73;;;;;;;;;;;;;;;;;;;;;;8789:13;8805:16;8813:7;8805;:16::i;:::-;8789:32;;8850:5;8839:16;;:7;:16;;;:51;;;;8883:7;8859:31;;:20;8871:7;8859:11;:20::i;:::-;:31;;;8839:51;:87;;;;8894:32;8911:5;8918:7;8894:16;:32::i;:::-;8839:87;8831:96;;;8605:329;;;;:::o;10751:447::-;10864:4;10844:24;;:16;10852:7;10844;:16::i;:::-;:24;;;10836:78;;;;;;;;;;;;;;;;;;;;;;10946:1;10932:16;;:2;:16;;;;10924:65;;;;;;;;;;;;;;;;;;;;;;11000:23;11015:7;11000:14;:23::i;:::-;11034:35;:17;:23;11052:4;11034:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11079:33;:17;:21;11097:2;11079:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11146:2;11123:11;:20;11135:7;11123:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11183:7;11179:2;11164:27;;11173:4;11164:27;;;;;;;;;;;;10751:447;;;:::o;1063:112:2:-;1128:7;1154;:14;;;1147:21;;1063:112;;;:::o;9179:327:6:-;9264:1;9250:16;;:2;:16;;;;9242:61;;;;;;;;;;;;;;;;;;;;;;9322:16;9330:7;9322;:16::i;:::-;9321:17;9313:58;;;;;;;;;;;;;;;;;;;;;;9405:2;9382:11;:20;9394:7;9382:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9417:33;:17;:21;9435:2;9417:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9491:7;9487:2;9466:33;;9483:1;9466:33;;;;;;;;;;;;9179:327;;:::o;11771:347::-;11892:4;11917:15;:2;:13;;;:15::i;:::-;11912:58;;11955:4;11948:11;;;;11912:58;11980:13;12012:2;11996:36;;;12033:10;12045:4;12051:7;12060:5;11996:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11996:70:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11996:70:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11996:70:6;;;;;;;;;11980:86;;713:10;12094:16;;12084:26;;;:6;:26;;;;12076:35;;;11771:347;;;;;;;:::o;12280:171::-;12379:1;12343:38;;:15;:24;12359:7;12343:24;;;;;;;;;;;;;;;;;;;;;:38;;;12339:106;;12432:1;12397:15;:24;12413:7;12397:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12339:106;12280:171;:::o;1276:108:2:-;1356:21;1375:1;1356:7;:14;;;:18;;:21;;;;:::i;:::-;1339:7;:14;;:38;;;;1276:108;:::o;1181:89::-;1262:1;1244:7;:14;;;:19;;;;;;;;;;;1181:89;:::o;542:413:9:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;1274:179:5:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;192:2220:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;352:6;339:20;330:29;;364:32;390:5;364:32;;;324:77;;;;;408:132;;491:6;485:13;476:22;;503:32;529:5;503:32;;;470:70;;;;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;997:442;;1099:3;1092:4;1084:6;1080:17;1076:27;1066:2;;1117:1;1114;1107:12;1066:2;1154:6;1141:20;1176:65;1191:49;1233:6;1191:49;;;1176:65;;;1167:74;;1261:6;1254:5;1247:21;1297:4;1289:6;1285:17;1330:4;1323:5;1319:16;1365:3;1356:6;1351:3;1347:16;1344:25;1341:2;;;1382:1;1379;1372:12;1341:2;1392:41;1426:6;1421:3;1416;1392:41;;;1059:380;;;;;;;;1447:130;;1527:6;1514:20;1505:29;;1539:33;1566:5;1539:33;;;1499:78;;;;;1584:241;;1688:2;1676:9;1667:7;1663:23;1659:32;1656:2;;;1704:1;1701;1694:12;1656:2;1739:1;1756:53;1801:7;1792:6;1781:9;1777:22;1756:53;;;1746:63;;1718:97;1650:175;;;;;1832:366;;;1953:2;1941:9;1932:7;1928:23;1924:32;1921:2;;;1969:1;1966;1959:12;1921:2;2004:1;2021:53;2066:7;2057:6;2046:9;2042:22;2021:53;;;2011:63;;1983:97;2111:2;2129:53;2174:7;2165:6;2154:9;2150:22;2129:53;;;2119:63;;2090:98;1915:283;;;;;;2205:491;;;;2343:2;2331:9;2322:7;2318:23;2314:32;2311:2;;;2359:1;2356;2349:12;2311:2;2394:1;2411:53;2456:7;2447:6;2436:9;2432:22;2411:53;;;2401:63;;2373:97;2501:2;2519:53;2564:7;2555:6;2544:9;2540:22;2519:53;;;2509:63;;2480:98;2609:2;2627:53;2672:7;2663:6;2652:9;2648:22;2627:53;;;2617:63;;2588:98;2305:391;;;;;;2703:721;;;;;2867:3;2855:9;2846:7;2842:23;2838:33;2835:2;;;2884:1;2881;2874:12;2835:2;2919:1;2936:53;2981:7;2972:6;2961:9;2957:22;2936:53;;;2926:63;;2898:97;3026:2;3044:53;3089:7;3080:6;3069:9;3065:22;3044:53;;;3034:63;;3005:98;3134:2;3152:53;3197:7;3188:6;3177:9;3173:22;3152:53;;;3142:63;;3113:98;3270:2;3259:9;3255:18;3242:32;3294:18;3286:6;3283:30;3280:2;;;3326:1;3323;3316:12;3280:2;3346:62;3400:7;3391:6;3380:9;3376:22;3346:62;;;3336:72;;3221:193;2829:595;;;;;;;;3431:360;;;3549:2;3537:9;3528:7;3524:23;3520:32;3517:2;;;3565:1;3562;3555:12;3517:2;3600:1;3617:53;3662:7;3653:6;3642:9;3638:22;3617:53;;;3607:63;;3579:97;3707:2;3725:50;3767:7;3758:6;3747:9;3743:22;3725:50;;;3715:60;;3686:95;3511:280;;;;;;3798:366;;;3919:2;3907:9;3898:7;3894:23;3890:32;3887:2;;;3935:1;3932;3925:12;3887:2;3970:1;3987:53;4032:7;4023:6;4012:9;4008:22;3987:53;;;3977:63;;3949:97;4077:2;4095:53;4140:7;4131:6;4120:9;4116:22;4095:53;;;4085:63;;4056:98;3881:283;;;;;;4171:239;;4274:2;4262:9;4253:7;4249:23;4245:32;4242:2;;;4290:1;4287;4280:12;4242:2;4325:1;4342:52;4386:7;4377:6;4366:9;4362:22;4342:52;;;4332:62;;4304:96;4236:174;;;;;4417:261;;4531:2;4519:9;4510:7;4506:23;4502:32;4499:2;;;4547:1;4544;4537:12;4499:2;4582:1;4599:63;4654:7;4645:6;4634:9;4630:22;4599:63;;;4589:73;;4561:107;4493:185;;;;;4685:1287;;;;;;;4911:3;4899:9;4890:7;4886:23;4882:33;4879:2;;;4928:1;4925;4918:12;4879:2;4991:1;4980:9;4976:17;4963:31;5014:18;5006:6;5003:30;5000:2;;;5046:1;5043;5036:12;5000:2;5066:63;5121:7;5112:6;5101:9;5097:22;5066:63;;;5056:73;;4942:193;5194:2;5183:9;5179:18;5166:32;5218:18;5210:6;5207:30;5204:2;;;5250:1;5247;5240:12;5204:2;5270:63;5325:7;5316:6;5305:9;5301:22;5270:63;;;5260:73;;5145:194;5398:2;5387:9;5383:18;5370:32;5422:18;5414:6;5411:30;5408:2;;;5454:1;5451;5444:12;5408:2;5474:63;5529:7;5520:6;5509:9;5505:22;5474:63;;;5464:73;;5349:194;5602:2;5591:9;5587:18;5574:32;5626:18;5618:6;5615:30;5612:2;;;5658:1;5655;5648:12;5612:2;5678:63;5733:7;5724:6;5713:9;5709:22;5678:63;;;5668:73;;5553:194;5778:3;5797:53;5842:7;5833:6;5822:9;5818:22;5797:53;;;5787:63;;5757:99;5887:3;5906:50;5948:7;5939:6;5928:9;5924:22;5906:50;;;5896:60;;5866:96;4873:1099;;;;;;;;;5979:241;;6083:2;6071:9;6062:7;6058:23;6054:32;6051:2;;;6099:1;6096;6089:12;6051:2;6134:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;;;6141:63;;6113:97;6045:175;;;;;6227:142;6318:45;6357:5;6318:45;;;6313:3;6306:58;6300:69;;;6376:113;6459:24;6477:5;6459:24;;;6454:3;6447:37;6441:48;;;6496:104;6573:21;6588:5;6573:21;;;6568:3;6561:34;6555:45;;;6607:343;;6717:38;6749:5;6717:38;;;6767:70;6830:6;6825:3;6767:70;;;6760:77;;6842:52;6887:6;6882:3;6875:4;6868:5;6864:16;6842:52;;;6915:29;6937:6;6915:29;;;6910:3;6906:39;6899:46;;6697:253;;;;;;6957:347;;7069:39;7102:5;7069:39;;;7120:71;7184:6;7179:3;7120:71;;;7113:78;;7196:52;7241:6;7236:3;7229:4;7222:5;7218:16;7196:52;;;7269:29;7291:6;7269:29;;;7264:3;7260:39;7253:46;;7049:255;;;;;;7312:465;;7472:67;7536:2;7531:3;7472:67;;;7465:74;;7572:66;7568:1;7563:3;7559:11;7552:87;7673:66;7668:2;7663:3;7659:12;7652:88;7768:2;7763:3;7759:12;7752:19;;7458:319;;;;7786:364;;7946:67;8010:2;8005:3;7946:67;;;7939:74;;8046:66;8042:1;8037:3;8033:11;8026:87;8141:2;8136:3;8132:12;8125:19;;7932:218;;;;8159:465;;8319:67;8383:2;8378:3;8319:67;;;8312:74;;8419:66;8415:1;8410:3;8406:11;8399:87;8520:66;8515:2;8510:3;8506:12;8499:88;8615:2;8610:3;8606:12;8599:19;;8305:319;;;;8633:364;;8793:67;8857:2;8852:3;8793:67;;;8786:74;;8893:66;8889:1;8884:3;8880:11;8873:87;8988:2;8983:3;8979:12;8972:19;;8779:218;;;;9006:364;;9166:67;9230:2;9225:3;9166:67;;;9159:74;;9266:66;9262:1;9257:3;9253:11;9246:87;9361:2;9356:3;9352:12;9345:19;;9152:218;;;;9379:465;;9539:67;9603:2;9598:3;9539:67;;;9532:74;;9639:66;9635:1;9630:3;9626:11;9619:87;9740:66;9735:2;9730:3;9726:12;9719:88;9835:2;9830:3;9826:12;9819:19;;9525:319;;;;9853:465;;10013:67;10077:2;10072:3;10013:67;;;10006:74;;10113:66;10109:1;10104:3;10100:11;10093:87;10214:66;10209:2;10204:3;10200:12;10193:88;10309:2;10304:3;10300:12;10293:19;;9999:319;;;;10327:465;;10487:67;10551:2;10546:3;10487:67;;;10480:74;;10587:66;10583:1;10578:3;10574:11;10567:87;10688:66;10683:2;10678:3;10674:12;10667:88;10783:2;10778:3;10774:12;10767:19;;10473:319;;;;10801:465;;10961:67;11025:2;11020:3;10961:67;;;10954:74;;11061:66;11057:1;11052:3;11048:11;11041:87;11162:66;11157:2;11152:3;11148:12;11141:88;11257:2;11252:3;11248:12;11241:19;;10947:319;;;;11275:364;;11435:67;11499:2;11494:3;11435:67;;;11428:74;;11535:66;11531:1;11526:3;11522:11;11515:87;11630:2;11625:3;11621:12;11614:19;;11421:218;;;;11648:465;;11808:67;11872:2;11867:3;11808:67;;;11801:74;;11908:66;11904:1;11899:3;11895:11;11888:87;12009:66;12004:2;11999:3;11995:12;11988:88;12104:2;12099:3;12095:12;12088:19;;11794:319;;;;12122:465;;12282:67;12346:2;12341:3;12282:67;;;12275:74;;12382:66;12378:1;12373:3;12369:11;12362:87;12483:66;12478:2;12473:3;12469:12;12462:88;12578:2;12573:3;12569:12;12562:19;;12268:319;;;;12596:465;;12756:67;12820:2;12815:3;12756:67;;;12749:74;;12856:66;12852:1;12847:3;12843:11;12836:87;12957:66;12952:2;12947:3;12943:12;12936:88;13052:2;13047:3;13043:12;13036:19;;12742:319;;;;13070:465;;13230:67;13294:2;13289:3;13230:67;;;13223:74;;13330:66;13326:1;13321:3;13317:11;13310:87;13431:66;13426:2;13421:3;13417:12;13410:88;13526:2;13521:3;13517:12;13510:19;;13216:319;;;;13544:465;;13704:67;13768:2;13763:3;13704:67;;;13697:74;;13804:66;13800:1;13795:3;13791:11;13784:87;13905:66;13900:2;13895:3;13891:12;13884:88;14000:2;13995:3;13991:12;13984:19;;13690:319;;;;14017:113;14100:24;14118:5;14100:24;;;14095:3;14088:37;14082:48;;;14137:213;;14255:2;14244:9;14240:18;14232:26;;14269:71;14337:1;14326:9;14322:17;14313:6;14269:71;;;14226:124;;;;;14357:647;;14585:3;14574:9;14570:19;14562:27;;14600:79;14676:1;14665:9;14661:17;14652:6;14600:79;;;14690:72;14758:2;14747:9;14743:18;14734:6;14690:72;;;14773;14841:2;14830:9;14826:18;14817:6;14773:72;;;14893:9;14887:4;14883:20;14878:2;14867:9;14863:18;14856:48;14918:76;14989:4;14980:6;14918:76;;;14910:84;;14556:448;;;;;;;;15011:201;;15123:2;15112:9;15108:18;15100:26;;15137:65;15199:1;15188:9;15184:17;15175:6;15137:65;;;15094:118;;;;;15219:1223;;15579:3;15568:9;15564:19;15556:27;;15630:9;15624:4;15620:20;15616:1;15605:9;15601:17;15594:47;15655:78;15728:4;15719:6;15655:78;;;15647:86;;15781:9;15775:4;15771:20;15766:2;15755:9;15751:18;15744:48;15806:78;15879:4;15870:6;15806:78;;;15798:86;;15932:9;15926:4;15922:20;15917:2;15906:9;15902:18;15895:48;15957:78;16030:4;16021:6;15957:78;;;15949:86;;16083:9;16077:4;16073:20;16068:2;16057:9;16053:18;16046:48;16108:78;16181:4;16172:6;16108:78;;;16100:86;;16197:73;16265:3;16254:9;16250:19;16241:6;16197:73;;;16281;16349:3;16338:9;16334:19;16325:6;16281:73;;;16365:67;16427:3;16416:9;16412:19;16403:6;16365:67;;;15550:892;;;;;;;;;;;16449:407;;16640:2;16629:9;16625:18;16617:26;;16690:9;16684:4;16680:20;16676:1;16665:9;16661:17;16654:47;16715:131;16841:4;16715:131;;;16707:139;;16611:245;;;;16863:407;;17054:2;17043:9;17039:18;17031:26;;17104:9;17098:4;17094:20;17090:1;17079:9;17075:17;17068:47;17129:131;17255:4;17129:131;;;17121:139;;17025:245;;;;17277:407;;17468:2;17457:9;17453:18;17445:26;;17518:9;17512:4;17508:20;17504:1;17493:9;17489:17;17482:47;17543:131;17669:4;17543:131;;;17535:139;;17439:245;;;;17691:407;;17882:2;17871:9;17867:18;17859:26;;17932:9;17926:4;17922:20;17918:1;17907:9;17903:17;17896:47;17957:131;18083:4;17957:131;;;17949:139;;17853:245;;;;18105:407;;18296:2;18285:9;18281:18;18273:26;;18346:9;18340:4;18336:20;18332:1;18321:9;18317:17;18310:47;18371:131;18497:4;18371:131;;;18363:139;;18267:245;;;;18519:407;;18710:2;18699:9;18695:18;18687:26;;18760:9;18754:4;18750:20;18746:1;18735:9;18731:17;18724:47;18785:131;18911:4;18785:131;;;18777:139;;18681:245;;;;18933:407;;19124:2;19113:9;19109:18;19101:26;;19174:9;19168:4;19164:20;19160:1;19149:9;19145:17;19138:47;19199:131;19325:4;19199:131;;;19191:139;;19095:245;;;;19347:407;;19538:2;19527:9;19523:18;19515:26;;19588:9;19582:4;19578:20;19574:1;19563:9;19559:17;19552:47;19613:131;19739:4;19613:131;;;19605:139;;19509:245;;;;19761:407;;19952:2;19941:9;19937:18;19929:26;;20002:9;19996:4;19992:20;19988:1;19977:9;19973:17;19966:47;20027:131;20153:4;20027:131;;;20019:139;;19923:245;;;;20175:407;;20366:2;20355:9;20351:18;20343:26;;20416:9;20410:4;20406:20;20402:1;20391:9;20387:17;20380:47;20441:131;20567:4;20441:131;;;20433:139;;20337:245;;;;20589:407;;20780:2;20769:9;20765:18;20757:26;;20830:9;20824:4;20820:20;20816:1;20805:9;20801:17;20794:47;20855:131;20981:4;20855:131;;;20847:139;;20751:245;;;;21003:407;;21194:2;21183:9;21179:18;21171:26;;21244:9;21238:4;21234:20;21230:1;21219:9;21215:17;21208:47;21269:131;21395:4;21269:131;;;21261:139;;21165:245;;;;21417:407;;21608:2;21597:9;21593:18;21585:26;;21658:9;21652:4;21648:20;21644:1;21633:9;21629:17;21622:47;21683:131;21809:4;21683:131;;;21675:139;;21579:245;;;;21831:407;;22022:2;22011:9;22007:18;21999:26;;22072:9;22066:4;22062:20;22058:1;22047:9;22043:17;22036:47;22097:131;22223:4;22097:131;;;22089:139;;21993:245;;;;22245:407;;22436:2;22425:9;22421:18;22413:26;;22486:9;22480:4;22476:20;22472:1;22461:9;22457:17;22450:47;22511:131;22637:4;22511:131;;;22503:139;;22407:245;;;;22659:213;;22777:2;22766:9;22762:18;22754:26;;22791:71;22859:1;22848:9;22844:17;22835:6;22791:71;;;22748:124;;;;;22879:256;;22941:2;22935:9;22925:19;;22979:4;22971:6;22967:17;23078:6;23066:10;23063:22;23042:18;23030:10;23027:34;23024:62;23021:2;;;23099:1;23096;23089:12;23021:2;23119:10;23115:2;23108:22;22919:216;;;;;23142:258;;23285:18;23277:6;23274:30;23271:2;;;23317:1;23314;23307:12;23271:2;23361:4;23357:9;23350:4;23342:6;23338:17;23334:33;23326:41;;23390:4;23384;23380:15;23372:23;;23208:192;;;;23407:259;;23551:18;23543:6;23540:30;23537:2;;;23583:1;23580;23573:12;23537:2;23627:4;23623:9;23616:4;23608:6;23604:17;23600:33;23592:41;;23656:4;23650;23646:15;23638:23;;23474:192;;;;23673:91;;23753:5;23747:12;23737:22;;23731:33;;;;23771:92;;23852:5;23846:12;23836:22;;23830:33;;;;23871:162;;23985:6;23980:3;23973:19;24022:4;24017:3;24013:14;23998:29;;23966:67;;;;;24042:163;;24157:6;24152:3;24145:19;24194:4;24189:3;24185:14;24170:29;;24138:67;;;;;24213:91;;24275:24;24293:5;24275:24;;;24264:35;;24258:46;;;;24311:85;;24384:5;24377:13;24370:21;24359:32;;24353:43;;;;24403:144;;24475:66;24468:5;24464:78;24453:89;;24447:100;;;;24554:121;;24627:42;24620:5;24616:54;24605:65;;24599:76;;;;24682:72;;24744:5;24733:16;;24727:27;;;;24761:129;;24848:37;24879:5;24848:37;;;24835:50;;24829:61;;;;24897:121;;24976:37;25007:5;24976:37;;;24963:50;;24957:61;;;;25025:108;;25104:24;25122:5;25104:24;;;25091:37;;25085:48;;;;25141:145;25222:6;25217:3;25212;25199:30;25278:1;25269:6;25264:3;25260:16;25253:27;25192:94;;;;25295:268;25360:1;25367:101;25381:6;25378:1;25375:13;25367:101;;;25457:1;25452:3;25448:11;25442:18;25438:1;25433:3;25429:11;25422:39;25403:2;25400:1;25396:10;25391:15;;25367:101;;;25483:6;25480:1;25477:13;25474:2;;;25548:1;25539:6;25534:3;25530:16;25523:27;25474:2;25344:219;;;;;25571:97;;25659:2;25655:7;25650:2;25643:5;25639:14;25635:28;25625:38;;25619:49;;;;25676:117;25745:24;25763:5;25745:24;;;25738:5;25735:35;25725:2;;25784:1;25781;25774:12;25725:2;25719:74;;25800:111;25866:21;25881:5;25866:21;;;25859:5;25856:32;25846:2;;25902:1;25899;25892:12;25846:2;25840:71;;25918:115;25986:23;26003:5;25986:23;;;25979:5;25976:34;25966:2;;26024:1;26021;26014:12;25966:2;25960:73;;26040:117;26109:24;26127:5;26109:24;;;26102:5;26099:35;26089:2;;26148:1;26145;26138:12;26089:2;26083:74;",
  "source": "pragma solidity ^0.5.8;\npragma experimental ABIEncoderV2; //to return ideatype\n\nimport \"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\ncontract Idea is ERC721 {\n    struct idea{\n        uint id;\n        string ideaTitle;\n        string ideaType;\n        string content;\n        string category;\n        uint initialValue;\n        uint actualValue;\n        bool setForSale;\n        }\n\n    uint ideaIdCounter=0;\n    idea[] ideas;//the array that contain all of the ideas\n\n    function addIdea(string memory _ideaTitle, string memory _ideaType, string memory _content, string memory _category, uint _initialValue, bool _setForSale) public {\n        require(!_exists(ideaIdCounter),\"IDEA CONTRACT ERROR: Idea ID already exists\");\n        _mint(msg.sender, ideaIdCounter);\n        //the actualValue will be 0 at first\n        idea memory newIdea = idea(ideaIdCounter, _ideaTitle, _ideaType, _content,_category, _initialValue,0, _setForSale);\n        ideas.push(newIdea);\n        ideaIdCounter++;\n    }\n\n    function getMsg() public returns (address){\n        return msg.sender;\n    }\n\n\n\n\n    function getIdea(uint _id)public view returns( string memory title,string memory ideaType,\n        string memory content,\n        string memory category,\n        uint initialValue,\n        uint actualValue,\n        bool setForSale) {\n        for (uint i = 0; i<ideas.length; i++){\n            if(ideas[i].id == _id){\n            return (ideas[i].ideaTitle, ideas[i].ideaType, ideas[i].content, ideas[i].category, ideas[i].initialValue, ideas[i].actualValue, ideas[i].setForSale) ;\n            }\n          }\n        }\n\n    function getIdeasLength () public view returns (uint){\n        return uint(ideas.length);\n    }\n\n\n    // function increaseActualValue(uint _id) public {\n    //     ideas[_id].actualValue += uint(0.0001);\n    // }\n\n\n    // function setIdeaForSale(uint _ideaId,bool _setForsale) public{\n    //     ideas[_ideaId].setForSale = _setForsale;\n    // }\n\n    // function buyIdea (uint _ideaId) public payable returns(bool success) {\n    //     require(_exists(_ideaId), \"IDEAS CONTRACT ERROR: There is no idea with this id\");\n    //     if(msg.sender.send(ideas[_ideaId].initialValue)){\n    //         safeTransferFrom(ownerOf(_ideaId), msg.sender, _ideaId);\n    //         success = true;}\n    //     else\n    //         success = false;\n\n\n    // }\n\n  }\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol",
  "ast": {
    "absolutePath": "/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol",
    "exportedSymbols": {
      "Idea": [
        172
      ]
    },
    "id": 173,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 173,
        "sourceUnit": 1039,
        "src": "80:110:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1038,
              "src": "209:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1038",
                "typeString": "contract ERC721"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "209:6:0"
          }
        ],
        "contractDependencies": [
          330,
          340,
          1038,
          1141
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 172,
        "linearizedBaseContracts": [
          172,
          1038,
          1141,
          330,
          340
        ],
        "name": "Idea",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Idea.idea",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 7,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "243:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "243:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "ideaTitle",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "260:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "260:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "name": "ideaType",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "286:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "286:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "name": "content",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "311:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "311:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "name": "category",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "335:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "name": "initialValue",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "360:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "360:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "name": "actualValue",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "387:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "name": "setForSale",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "413:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "413:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "idea",
            "nodeType": "StructDefinition",
            "scope": 172,
            "src": "222:217:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "ideaIdCounter",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "445:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "445:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "464:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "name": "ideas",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "471:12:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
              "typeString": "struct Idea.idea[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 26,
                "name": "idea",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 22,
                "src": "471:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                  "typeString": "struct Idea.idea"
                }
              },
              "id": 27,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "471:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage_ptr",
                "typeString": "struct Idea.idea[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "693:360:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "711:23:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 45,
                              "name": "ideaIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "720:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 44,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "712:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "712:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4944454120434f4e5452414354204552524f523a204964656120494420616c726561647920657869737473",
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4c4364064dbd8a7b3f8bc798f9b443675405ca554ed7529246a7d7b60674ef6",
                          "typeString": "literal_string \"IDEA CONTRACT ERROR: Idea ID already exists\""
                        },
                        "value": "IDEA CONTRACT ERROR: Idea ID already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4c4364064dbd8a7b3f8bc798f9b443675405ca554ed7529246a7d7b60674ef6",
                          "typeString": "literal_string \"IDEA CONTRACT ERROR: Idea ID already exists\""
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1194,
                        1195
                      ],
                      "referencedDeclaration": 1195,
                      "src": "703:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "703:78:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1191,
                          "src": "797:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "797:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "ideaIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "809:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "791:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "791:32:0"
                },
                {
                  "assignments": [
                    58
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58,
                      "name": "newIdea",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "878:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                        "typeString": "struct Idea.idea"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 57,
                        "name": "idea",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "878:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                          "typeString": "struct Idea.idea"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "ideaIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "905:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "_ideaTitle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "920:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "_ideaType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "932:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "_content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "943:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "952:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "_initialValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "963:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "977:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "_setForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "980:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "idea",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "900:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_idea_$22_storage_ptr_$",
                        "typeString": "type(struct Idea.idea storage pointer)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_idea_$22_memory",
                      "typeString": "struct Idea.idea memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "878:114:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "newIdea",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1013:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                          "typeString": "struct Idea.idea memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                          "typeString": "struct Idea.idea memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "ideas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1002:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                          "typeString": "struct Idea.idea storage ref[] storage ref"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1002:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_idea_$22_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Idea.idea storage ref) returns (uint256)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1031:15:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "ideaIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1031:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:15:0"
                }
              ]
            },
            "documentation": null,
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addIdea",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "name": "_ideaTitle",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "548:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "name": "_ideaType",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "574:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "name": "_content",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "599:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "name": "_category",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "623:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "_initialValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "648:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "name": "_setForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "668:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "547:138:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:0:0"
            },
            "scope": 172,
            "src": "531:522:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1101:34:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1118:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1118:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 84,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1111:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1074:2:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1093:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:9:0"
            },
            "scope": 172,
            "src": "1059:76:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1376:284:0",
              "statements": [
                {
                  "body": {
                    "id": 157,
                    "nodeType": "Block",
                    "src": "1423:227:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 119,
                                "name": "ideas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "1440:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                  "typeString": "struct Idea.idea storage ref[] storage ref"
                                }
                              },
                              "id": 121,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 120,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "1446:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1440:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_idea_$22_storage",
                                "typeString": "struct Idea.idea storage ref"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "1440:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "1455:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1440:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 156,
                        "nodeType": "IfStatement",
                        "src": "1437:201:0",
                        "trueBody": {
                          "id": 155,
                          "nodeType": "Block",
                          "src": "1459:179:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 125,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1481:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 127,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 126,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1487:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1481:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 128,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ideaTitle",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9,
                                    "src": "1481:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 129,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1501:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 131,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 130,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1507:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1501:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 132,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ideaType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11,
                                    "src": "1501:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 133,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1520:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 135,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 134,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1526:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1520:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 136,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "content",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13,
                                    "src": "1520:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 137,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1538:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 139,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 138,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1544:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1538:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 140,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "category",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15,
                                    "src": "1538:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 141,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1557:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 143,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 142,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1563:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1557:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 144,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initialValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17,
                                    "src": "1557:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 145,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1580:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 147,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 146,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1586:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1580:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 148,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "actualValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 19,
                                    "src": "1580:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 149,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1602:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 151,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 150,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1608:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1602:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 152,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "setForSale",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "1602:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 153,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1480:142:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_bool_$",
                                  "typeString": "tuple(string storage ref,string storage ref,string storage ref,string storage ref,uint256,uint256,bool)"
                                }
                              },
                              "functionReturnParameters": 107,
                              "id": 154,
                              "nodeType": "Return",
                              "src": "1473:149:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 112,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "1403:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "ideas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1405:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                          "typeString": "struct Idea.idea storage ref[] storage ref"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1405:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1403:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 158,
                  "initializationExpression": {
                    "assignments": [
                      109
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 109,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "1391:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1391:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 111,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1400:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1391:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1419:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1419:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 118,
                    "nodeType": "ExpressionStatement",
                    "src": "1419:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1386:264:0"
                }
              ]
            },
            "documentation": null,
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdea",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1161:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1160:10:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1191:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1191:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "name": "ideaType",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1211:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "content",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1243:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1274:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "initialValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1306:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "name": "actualValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1333:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "name": "setForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1359:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1189:186:0"
            },
            "scope": 172,
            "src": "1144:516:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1719:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "ideas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1741:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                            "typeString": "struct Idea.idea storage ref[] storage ref"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1741:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1736:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 164,
                  "id": 169,
                  "nodeType": "Return",
                  "src": "1729:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdeasLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:2:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1714:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1713:6:0"
            },
            "scope": 172,
            "src": "1666:95:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 173,
        "src": "192:2220:0"
      }
    ],
    "src": "0:2420:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol",
    "exportedSymbols": {
      "Idea": [
        172
      ]
    },
    "id": 173,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 173,
        "sourceUnit": 1039,
        "src": "80:110:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1038,
              "src": "209:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1038",
                "typeString": "contract ERC721"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "209:6:0"
          }
        ],
        "contractDependencies": [
          330,
          340,
          1038,
          1141
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 172,
        "linearizedBaseContracts": [
          172,
          1038,
          1141,
          330,
          340
        ],
        "name": "Idea",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Idea.idea",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 7,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "243:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "243:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "ideaTitle",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "260:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "260:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "name": "ideaType",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "286:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "286:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "name": "content",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "311:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "311:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "name": "category",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "335:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "name": "initialValue",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "360:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "360:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "name": "actualValue",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "387:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "name": "setForSale",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "413:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "413:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "idea",
            "nodeType": "StructDefinition",
            "scope": 172,
            "src": "222:217:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "ideaIdCounter",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "445:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "445:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "464:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "name": "ideas",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "471:12:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
              "typeString": "struct Idea.idea[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 26,
                "name": "idea",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 22,
                "src": "471:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                  "typeString": "struct Idea.idea"
                }
              },
              "id": 27,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "471:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage_ptr",
                "typeString": "struct Idea.idea[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "693:360:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "711:23:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 45,
                              "name": "ideaIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "720:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 44,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "712:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "712:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4944454120434f4e5452414354204552524f523a204964656120494420616c726561647920657869737473",
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4c4364064dbd8a7b3f8bc798f9b443675405ca554ed7529246a7d7b60674ef6",
                          "typeString": "literal_string \"IDEA CONTRACT ERROR: Idea ID already exists\""
                        },
                        "value": "IDEA CONTRACT ERROR: Idea ID already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4c4364064dbd8a7b3f8bc798f9b443675405ca554ed7529246a7d7b60674ef6",
                          "typeString": "literal_string \"IDEA CONTRACT ERROR: Idea ID already exists\""
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1194,
                        1195
                      ],
                      "referencedDeclaration": 1195,
                      "src": "703:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "703:78:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1191,
                          "src": "797:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "797:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "ideaIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "809:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "791:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "791:32:0"
                },
                {
                  "assignments": [
                    58
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58,
                      "name": "newIdea",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "878:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                        "typeString": "struct Idea.idea"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 57,
                        "name": "idea",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "878:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                          "typeString": "struct Idea.idea"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "ideaIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "905:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "_ideaTitle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "920:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "_ideaType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "932:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "_content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "943:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "952:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "_initialValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "963:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "977:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "_setForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "980:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "idea",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "900:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_idea_$22_storage_ptr_$",
                        "typeString": "type(struct Idea.idea storage pointer)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_idea_$22_memory",
                      "typeString": "struct Idea.idea memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "878:114:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "newIdea",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1013:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                          "typeString": "struct Idea.idea memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                          "typeString": "struct Idea.idea memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "ideas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1002:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                          "typeString": "struct Idea.idea storage ref[] storage ref"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1002:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_idea_$22_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Idea.idea storage ref) returns (uint256)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1031:15:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "ideaIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1031:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:15:0"
                }
              ]
            },
            "documentation": null,
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addIdea",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "name": "_ideaTitle",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "548:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "name": "_ideaType",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "574:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "name": "_content",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "599:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "name": "_category",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "623:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "_initialValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "648:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "name": "_setForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "668:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "547:138:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:0:0"
            },
            "scope": 172,
            "src": "531:522:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1101:34:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1118:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1118:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 84,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1111:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1074:2:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1093:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:9:0"
            },
            "scope": 172,
            "src": "1059:76:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1376:284:0",
              "statements": [
                {
                  "body": {
                    "id": 157,
                    "nodeType": "Block",
                    "src": "1423:227:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 119,
                                "name": "ideas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "1440:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                  "typeString": "struct Idea.idea storage ref[] storage ref"
                                }
                              },
                              "id": 121,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 120,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "1446:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1440:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_idea_$22_storage",
                                "typeString": "struct Idea.idea storage ref"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "1440:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "1455:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1440:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 156,
                        "nodeType": "IfStatement",
                        "src": "1437:201:0",
                        "trueBody": {
                          "id": 155,
                          "nodeType": "Block",
                          "src": "1459:179:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 125,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1481:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 127,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 126,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1487:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1481:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 128,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ideaTitle",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9,
                                    "src": "1481:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 129,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1501:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 131,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 130,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1507:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1501:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 132,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ideaType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11,
                                    "src": "1501:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 133,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1520:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 135,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 134,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1526:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1520:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 136,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "content",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13,
                                    "src": "1520:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 137,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1538:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 139,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 138,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1544:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1538:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 140,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "category",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15,
                                    "src": "1538:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 141,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1557:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 143,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 142,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1563:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1557:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 144,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initialValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17,
                                    "src": "1557:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 145,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1580:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 147,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 146,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1586:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1580:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 148,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "actualValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 19,
                                    "src": "1580:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 149,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1602:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 151,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 150,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "1608:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1602:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 152,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "setForSale",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "1602:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 153,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1480:142:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_bool_$",
                                  "typeString": "tuple(string storage ref,string storage ref,string storage ref,string storage ref,uint256,uint256,bool)"
                                }
                              },
                              "functionReturnParameters": 107,
                              "id": 154,
                              "nodeType": "Return",
                              "src": "1473:149:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 112,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "1403:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "ideas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1405:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                          "typeString": "struct Idea.idea storage ref[] storage ref"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1405:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1403:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 158,
                  "initializationExpression": {
                    "assignments": [
                      109
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 109,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "1391:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1391:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 111,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1400:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1391:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1419:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1419:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 118,
                    "nodeType": "ExpressionStatement",
                    "src": "1419:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1386:264:0"
                }
              ]
            },
            "documentation": null,
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdea",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1161:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1160:10:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1191:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1191:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "name": "ideaType",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1211:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "content",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1243:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1274:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "initialValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1306:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "name": "actualValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1333:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "name": "setForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1359:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1189:186:0"
            },
            "scope": 172,
            "src": "1144:516:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1719:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "ideas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1741:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                            "typeString": "struct Idea.idea storage ref[] storage ref"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1741:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1736:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 164,
                  "id": 169,
                  "nodeType": "Return",
                  "src": "1729:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdeasLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:2:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1714:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1713:6:0"
            },
            "scope": 172,
            "src": "1666:95:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 173,
        "src": "192:2220:0"
      }
    ],
    "src": "0:2420:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x78721357903470926B56EE7a1a588B96B24E7D52",
      "transactionHash": "0x8fef2ba2c83bfd24da7f430bb8564ae407c56edb358fae303f5329502bdd2a28"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-21T10:31:32.617Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}