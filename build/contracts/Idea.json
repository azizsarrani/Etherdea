{
  "contractName": "Idea",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaTitle",
          "type": "string"
        },
        {
          "name": "_ideaType",
          "type": "string"
        },
        {
          "name": "_content",
          "type": "string"
        },
        {
          "name": "_category",
          "type": "string"
        },
        {
          "name": "_initialValue",
          "type": "uint256"
        },
        {
          "name": "_setForSale",
          "type": "bool"
        }
      ],
      "name": "addIdea",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getIdea",
      "outputs": [
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "ideaType",
          "type": "string"
        },
        {
          "name": "content",
          "type": "string"
        },
        {
          "name": "category",
          "type": "string"
        },
        {
          "name": "initialValue",
          "type": "uint256"
        },
        {
          "name": "actualValue",
          "type": "uint256"
        },
        {
          "name": "setForSale",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getIdeas",
      "outputs": [
        {
          "components": [
            {
              "name": "id",
              "type": "uint256"
            },
            {
              "name": "ideaTitle",
              "type": "string"
            },
            {
              "name": "ideaType",
              "type": "string"
            },
            {
              "name": "content",
              "type": "string"
            },
            {
              "name": "category",
              "type": "string"
            },
            {
              "name": "initialValue",
              "type": "uint256"
            },
            {
              "name": "actualValue",
              "type": "uint256"
            },
            {
              "name": "setForSale",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIdeas\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"ideaTitle\",\"type\":\"string\"},{\"name\":\"ideaType\",\"type\":\"string\"},{\"name\":\"content\",\"type\":\"string\"},{\"name\":\"category\",\"type\":\"string\"},{\"name\":\"initialValue\",\"type\":\"uint256\"},{\"name\":\"actualValue\",\"type\":\"uint256\"},{\"name\":\"setForSale\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getIdea\",\"outputs\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"ideaType\",\"type\":\"string\"},{\"name\":\"content\",\"type\":\"string\"},{\"name\":\"category\",\"type\":\"string\"},{\"name\":\"initialValue\",\"type\":\"uint256\"},{\"name\":\"actualValue\",\"type\":\"uint256\"},{\"name\":\"setForSale\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaTitle\",\"type\":\"string\"},{\"name\":\"_ideaType\",\"type\":\"string\"},{\"name\":\"_content\",\"type\":\"string\"},{\"name\":\"_category\",\"type\":\"string\"},{\"name\":\"_initialValue\",\"type\":\"uint256\"},{\"name\":\"_setForSale\",\"type\":\"bool\"}],\"name\":\"addIdea\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol\":\"Idea\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol\":{\"keccak256\":\"0x8228600614a7f852052bd4c457397424c23d1c9d9294682d36fabdfb5d007c5b\",\"urls\":[\"bzzr://b50a5a03a4a0c09f5be8d0f1e10b8510bebc724da2ff0c223ba579bd8602c405\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xac2eacd7e7762e275442f28f21d821544df5aae2ed7698af13be8c41b7005e2e\",\"urls\":[\"bzzr://43e901f6f210568ebc1d3591da3ce6a9d10796b854767a9c6e3da10305a8a332\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzzr://fc2ba15143ce3a00268ecd15fc98eb2469b18bfe27a64bbab0ac6446f161c739\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf151df411bbf4eaef1fc8e8480cd10c2cd985f1a36517e63981517610213efc1\",\"urls\":[\"bzzr://9bca20c0c1208be8f31fc7a73faccd2fca4c5f84dc0a432ae2e066970551db34\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xce48937a8007c580b8e2e35705738c922dd17540de89ebee6df06d2917a3f9fc\",\"urls\":[\"bzzr://de494d3843e2c151aa108782382720b5d9f4531f0aa620a4244ca12fc1f8a780\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600555620000216301ffc9a760e01b6200003f60201b60201c565b620000396380ac58cd60e01b6200003f60201b60201c565b6200018c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620000ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a29062000159565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600062000126601c836200017b565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190508181036000830152620001748162000117565b9050919050565b600082825260208201905092915050565b612c61806200019c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806344de6b2f1161008c578063a22cb46511610066578063a22cb4651461023c578063afa945cc14610258578063b88d4fde14610274578063e985e9c514610290576100cf565b806344de6b2f146101a65780636352211e146101dc57806370a082311461020c576100cf565b806301ffc9a7146100d45780630448584114610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036036100e99190810190611d7c565b6102c0565b6040516100fb919061271e565b60405180910390f35b61010c610327565b60405161011991906126fc565b60405180910390f35b61013c60048036036101379190810190611eb7565b610648565b6040516101499190612695565b60405180910390f35b61016c60048036036101679190810190611d40565b6106cd565b005b61018860048036036101839190810190611c3a565b61087a565b005b6101a4600480360361019f9190810190611c3a565b6108d3565b005b6101c060048036036101bb9190810190611eb7565b6108f3565b6040516101d39796959493929190612739565b60405180910390f35b6101f660048036036101f19190810190611eb7565b610cb7565b6040516102039190612695565b60405180910390f35b61022660048036036102219190810190611bd5565b610d69565b60405161023391906129a4565b60405180910390f35b61025660048036036102519190810190611d04565b610e28565b005b610272600480360361026d9190810190611dce565b610f94565b005b61028e60048036036102899190810190611c89565b611132565b005b6102aa60048036036102a59190810190611bfe565b61118e565b6040516102b7919061271e565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60606006805480602002602001604051908101604052809291908181526020016000905b8282101561063f57838290600052602060002090600802016040518061010001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104125780601f106103e757610100808354040283529160200191610412565b820191906000526020600020905b8154815290600101906020018083116103f557829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104b45780601f10610489576101008083540402835291602001916104b4565b820191906000526020600020905b81548152906001019060200180831161049757829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105565780601f1061052b57610100808354040283529160200191610556565b820191906000526020600020905b81548152906001019060200180831161053957829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b5050505050815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250508152602001906001019061034b565b50505050905090565b600061065382611222565b610692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068990612904565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106d882610cb7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090612964565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107895750610788813361118e565b5b6107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf90612884565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6108843382611294565b6108c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ba90612984565b60405180910390fd5b6108ce838383611372565b505050565b6108ee83838360405180602001604052806000815250611132565b505050565b606080606080600080600080600090505b600680549050811015610caa57886006828154811061091f57fe5b9060005260206000209060080201600001541415610c9d576006818154811061094457fe5b90600052602060002090600802016001016006828154811061096257fe5b90600052602060002090600802016002016006838154811061098057fe5b90600052602060002090600802016003016006848154811061099e57fe5b9060005260206000209060080201600401600685815481106109bc57fe5b906000526020600020906008020160050154600686815481106109db57fe5b906000526020600020906008020160060154600687815481106109fa57fe5b906000526020600020906008020160070160009054906101000a900460ff16868054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aae5780601f10610a8357610100808354040283529160200191610aae565b820191906000526020600020905b815481529060010190602001808311610a9157829003601f168201915b50505050509650858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b4a5780601f10610b1f57610100808354040283529160200191610b4a565b820191906000526020600020905b815481529060010190602001808311610b2d57829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610be65780601f10610bbb57610100808354040283529160200191610be6565b820191906000526020600020905b815481529060010190602001808311610bc957829003601f168201915b50505050509450838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c825780601f10610c5757610100808354040283529160200191610c82565b820191906000526020600020905b815481529060010190602001808311610c6557829003601f168201915b50505050509350975097509750975097509750975050610cac565b8080600101915050610904565b505b919395979092949650565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d57906128c4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd1906128a4565b60405180910390fd5b610e21600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206115a1565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8e90612824565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f88919061271e565b60405180910390a35050565b610f9f600554611222565b15610fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd690612944565b60405180910390fd5b610feb336005546115af565b610ff36119d8565b604051806101000160405280600554815260200188815260200187815260200186815260200185815260200184815260200160008152602001831515815250905060068190806001815401808255809150509060018203906000526020600020906008020160009091929091909150600082015181600001556020820151816001019080519060200190611088929190611a1f565b5060408201518160020190805190602001906110a5929190611a1f565b5060608201518160030190805190602001906110c2929190611a1f565b5060808201518160040190805190602001906110df929190611a1f565b5060a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff02191690831515021790555050505060056000815480929190600101919050555050505050505050565b61113d84848461087a565b61114984848484611761565b611188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117f906127c4565b60405180910390fd5b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600061129f82611222565b6112de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d590612864565b60405180910390fd5b60006112e983610cb7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061135857508373ffffffffffffffffffffffffffffffffffffffff1661134084610648565b73ffffffffffffffffffffffffffffffffffffffff16145b806113695750611368818561118e565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661139282610cb7565b73ffffffffffffffffffffffffffffffffffffffff16146113e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113df90612924565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144f90612804565b60405180910390fd5b61146181611878565b6114a8600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611936565b6114ef600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611959565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561161f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611616906128e4565b60405180910390fd5b61162881611222565b15611668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165f906127e4565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611701600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611959565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006117828473ffffffffffffffffffffffffffffffffffffffff1661196f565b61178f5760019050611870565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016117d094939291906126b0565b602060405180830381600087803b1580156117ea57600080fd5b505af11580156117fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118229190810190611da5565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146119335760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61194e6001826000015461198290919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b6000828211156119c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119be90612844565b60405180910390fd5b600082840390508091505092915050565b604051806101000160405280600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a6057805160ff1916838001178555611a8e565b82800160010185558215611a8e579182015b82811115611a8d578251825591602001919060010190611a72565b5b509050611a9b9190611a9f565b5090565b611ac191905b80821115611abd576000816000905550600101611aa5565b5090565b90565b600081359050611ad381612bcb565b92915050565b600081359050611ae881612be2565b92915050565b600081359050611afd81612bf9565b92915050565b600081519050611b1281612bf9565b92915050565b600082601f830112611b2957600080fd5b8135611b3c611b37826129ec565b6129bf565b91508082526020830160208301858383011115611b5857600080fd5b611b63838284612b78565b50505092915050565b600082601f830112611b7d57600080fd5b8135611b90611b8b82612a18565b6129bf565b91508082526020830160208301858383011115611bac57600080fd5b611bb7838284612b78565b50505092915050565b600081359050611bcf81612c10565b92915050565b600060208284031215611be757600080fd5b6000611bf584828501611ac4565b91505092915050565b60008060408385031215611c1157600080fd5b6000611c1f85828601611ac4565b9250506020611c3085828601611ac4565b9150509250929050565b600080600060608486031215611c4f57600080fd5b6000611c5d86828701611ac4565b9350506020611c6e86828701611ac4565b9250506040611c7f86828701611bc0565b9150509250925092565b60008060008060808587031215611c9f57600080fd5b6000611cad87828801611ac4565b9450506020611cbe87828801611ac4565b9350506040611ccf87828801611bc0565b925050606085013567ffffffffffffffff811115611cec57600080fd5b611cf887828801611b18565b91505092959194509250565b60008060408385031215611d1757600080fd5b6000611d2585828601611ac4565b9250506020611d3685828601611ad9565b9150509250929050565b60008060408385031215611d5357600080fd5b6000611d6185828601611ac4565b9250506020611d7285828601611bc0565b9150509250929050565b600060208284031215611d8e57600080fd5b6000611d9c84828501611aee565b91505092915050565b600060208284031215611db757600080fd5b6000611dc584828501611b03565b91505092915050565b60008060008060008060c08789031215611de757600080fd5b600087013567ffffffffffffffff811115611e0157600080fd5b611e0d89828a01611b6c565b965050602087013567ffffffffffffffff811115611e2a57600080fd5b611e3689828a01611b6c565b955050604087013567ffffffffffffffff811115611e5357600080fd5b611e5f89828a01611b6c565b945050606087013567ffffffffffffffff811115611e7c57600080fd5b611e8889828a01611b6c565b9350506080611e9989828a01611bc0565b92505060a0611eaa89828a01611ad9565b9150509295509295509295565b600060208284031215611ec957600080fd5b6000611ed784828501611bc0565b91505092915050565b6000611eec83836125b2565b905092915050565b611efd81612b42565b82525050565b611f0c81612ace565b82525050565b6000611f1d82612a51565b611f278185612a8a565b935083602082028501611f3985612a44565b8060005b85811015611f755784840389528151611f568582611ee0565b9450611f6183612a7d565b925060208a01995050600181019050611f3d565b50829750879550505050505092915050565b611f9081612ae0565b82525050565b611f9f81612ae0565b82525050565b6000611fb082612a5c565b611fba8185612a9b565b9350611fca818560208601612b87565b611fd381612bba565b840191505092915050565b6000611fe982612a72565b611ff38185612abd565b9350612003818560208601612b87565b61200c81612bba565b840191505092915050565b600061202282612a67565b61202c8185612aac565b935061203c818560208601612b87565b61204581612bba565b840191505092915050565b600061205d603283612abd565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006120c3601c83612abd565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612103602483612abd565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612169601983612abd565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006121a9601e83612abd565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b60006121e9602c83612abd565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061224f603883612abd565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b60006122b5602a83612abd565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061231b602983612abd565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612381602083612abd565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006123c1602c83612abd565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612427602983612abd565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061248d602b83612abd565b91507f4944454120434f4e5452414354204552524f523a204964656120494420616c7260008301527f65616479206578697374730000000000000000000000000000000000000000006020830152604082019050919050565b60006124f3602183612abd565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612559603183612abd565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000610100830160008301516125cb6000860182612677565b50602083015184820360208601526125e38282612017565b915050604083015184820360408601526125fd8282612017565b915050606083015184820360608601526126178282612017565b915050608083015184820360808601526126318282612017565b91505060a083015161264660a0860182612677565b5060c083015161265960c0860182612677565b5060e083015161266c60e0860182611f87565b508091505092915050565b61268081612b38565b82525050565b61268f81612b38565b82525050565b60006020820190506126aa6000830184611f03565b92915050565b60006080820190506126c56000830187611ef4565b6126d26020830186611f03565b6126df6040830185612686565b81810360608301526126f18184611fa5565b905095945050505050565b600060208201905081810360008301526127168184611f12565b905092915050565b60006020820190506127336000830184611f96565b92915050565b600060e0820190508181036000830152612753818a611fde565b905081810360208301526127678189611fde565b9050818103604083015261277b8188611fde565b9050818103606083015261278f8187611fde565b905061279e6080830186612686565b6127ab60a0830185612686565b6127b860c0830184611f96565b98975050505050505050565b600060208201905081810360008301526127dd81612050565b9050919050565b600060208201905081810360008301526127fd816120b6565b9050919050565b6000602082019050818103600083015261281d816120f6565b9050919050565b6000602082019050818103600083015261283d8161215c565b9050919050565b6000602082019050818103600083015261285d8161219c565b9050919050565b6000602082019050818103600083015261287d816121dc565b9050919050565b6000602082019050818103600083015261289d81612242565b9050919050565b600060208201905081810360008301526128bd816122a8565b9050919050565b600060208201905081810360008301526128dd8161230e565b9050919050565b600060208201905081810360008301526128fd81612374565b9050919050565b6000602082019050818103600083015261291d816123b4565b9050919050565b6000602082019050818103600083015261293d8161241a565b9050919050565b6000602082019050818103600083015261295d81612480565b9050919050565b6000602082019050818103600083015261297d816124e6565b9050919050565b6000602082019050818103600083015261299d8161254c565b9050919050565b60006020820190506129b96000830184612686565b92915050565b6000604051905081810181811067ffffffffffffffff821117156129e257600080fd5b8060405250919050565b600067ffffffffffffffff821115612a0357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612a2f57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612ad982612b18565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b4d82612b54565b9050919050565b6000612b5f82612b66565b9050919050565b6000612b7182612b18565b9050919050565b82818337600083830152505050565b60005b83811015612ba5578082015181840152602081019050612b8a565b83811115612bb4576000848401525b50505050565b6000601f19601f8301169050919050565b612bd481612ace565b8114612bdf57600080fd5b50565b612beb81612ae0565b8114612bf657600080fd5b50565b612c0281612aec565b8114612c0d57600080fd5b50565b612c1981612b38565b8114612c2457600080fd5b5056fea265627a7a72305820940ff11cd96a370141bab56e25ba69800ccce4760e2a705f1b8c2cc5aa4f329b6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806344de6b2f1161008c578063a22cb46511610066578063a22cb4651461023c578063afa945cc14610258578063b88d4fde14610274578063e985e9c514610290576100cf565b806344de6b2f146101a65780636352211e146101dc57806370a082311461020c576100cf565b806301ffc9a7146100d45780630448584114610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036036100e99190810190611d7c565b6102c0565b6040516100fb919061271e565b60405180910390f35b61010c610327565b60405161011991906126fc565b60405180910390f35b61013c60048036036101379190810190611eb7565b610648565b6040516101499190612695565b60405180910390f35b61016c60048036036101679190810190611d40565b6106cd565b005b61018860048036036101839190810190611c3a565b61087a565b005b6101a4600480360361019f9190810190611c3a565b6108d3565b005b6101c060048036036101bb9190810190611eb7565b6108f3565b6040516101d39796959493929190612739565b60405180910390f35b6101f660048036036101f19190810190611eb7565b610cb7565b6040516102039190612695565b60405180910390f35b61022660048036036102219190810190611bd5565b610d69565b60405161023391906129a4565b60405180910390f35b61025660048036036102519190810190611d04565b610e28565b005b610272600480360361026d9190810190611dce565b610f94565b005b61028e60048036036102899190810190611c89565b611132565b005b6102aa60048036036102a59190810190611bfe565b61118e565b6040516102b7919061271e565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60606006805480602002602001604051908101604052809291908181526020016000905b8282101561063f57838290600052602060002090600802016040518061010001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104125780601f106103e757610100808354040283529160200191610412565b820191906000526020600020905b8154815290600101906020018083116103f557829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104b45780601f10610489576101008083540402835291602001916104b4565b820191906000526020600020905b81548152906001019060200180831161049757829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105565780601f1061052b57610100808354040283529160200191610556565b820191906000526020600020905b81548152906001019060200180831161053957829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b5050505050815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250508152602001906001019061034b565b50505050905090565b600061065382611222565b610692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068990612904565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106d882610cb7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090612964565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107895750610788813361118e565b5b6107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf90612884565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6108843382611294565b6108c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ba90612984565b60405180910390fd5b6108ce838383611372565b505050565b6108ee83838360405180602001604052806000815250611132565b505050565b606080606080600080600080600090505b600680549050811015610caa57886006828154811061091f57fe5b9060005260206000209060080201600001541415610c9d576006818154811061094457fe5b90600052602060002090600802016001016006828154811061096257fe5b90600052602060002090600802016002016006838154811061098057fe5b90600052602060002090600802016003016006848154811061099e57fe5b9060005260206000209060080201600401600685815481106109bc57fe5b906000526020600020906008020160050154600686815481106109db57fe5b906000526020600020906008020160060154600687815481106109fa57fe5b906000526020600020906008020160070160009054906101000a900460ff16868054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aae5780601f10610a8357610100808354040283529160200191610aae565b820191906000526020600020905b815481529060010190602001808311610a9157829003601f168201915b50505050509650858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b4a5780601f10610b1f57610100808354040283529160200191610b4a565b820191906000526020600020905b815481529060010190602001808311610b2d57829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610be65780601f10610bbb57610100808354040283529160200191610be6565b820191906000526020600020905b815481529060010190602001808311610bc957829003601f168201915b50505050509450838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c825780601f10610c5757610100808354040283529160200191610c82565b820191906000526020600020905b815481529060010190602001808311610c6557829003601f168201915b50505050509350975097509750975097509750975050610cac565b8080600101915050610904565b505b919395979092949650565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d57906128c4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd1906128a4565b60405180910390fd5b610e21600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206115a1565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8e90612824565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f88919061271e565b60405180910390a35050565b610f9f600554611222565b15610fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd690612944565b60405180910390fd5b610feb336005546115af565b610ff36119d8565b604051806101000160405280600554815260200188815260200187815260200186815260200185815260200184815260200160008152602001831515815250905060068190806001815401808255809150509060018203906000526020600020906008020160009091929091909150600082015181600001556020820151816001019080519060200190611088929190611a1f565b5060408201518160020190805190602001906110a5929190611a1f565b5060608201518160030190805190602001906110c2929190611a1f565b5060808201518160040190805190602001906110df929190611a1f565b5060a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff02191690831515021790555050505060056000815480929190600101919050555050505050505050565b61113d84848461087a565b61114984848484611761565b611188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117f906127c4565b60405180910390fd5b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600061129f82611222565b6112de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d590612864565b60405180910390fd5b60006112e983610cb7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061135857508373ffffffffffffffffffffffffffffffffffffffff1661134084610648565b73ffffffffffffffffffffffffffffffffffffffff16145b806113695750611368818561118e565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661139282610cb7565b73ffffffffffffffffffffffffffffffffffffffff16146113e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113df90612924565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144f90612804565b60405180910390fd5b61146181611878565b6114a8600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611936565b6114ef600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611959565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561161f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611616906128e4565b60405180910390fd5b61162881611222565b15611668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165f906127e4565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611701600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611959565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006117828473ffffffffffffffffffffffffffffffffffffffff1661196f565b61178f5760019050611870565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016117d094939291906126b0565b602060405180830381600087803b1580156117ea57600080fd5b505af11580156117fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118229190810190611da5565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146119335760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61194e6001826000015461198290919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b6000828211156119c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119be90612844565b60405180910390fd5b600082840390508091505092915050565b604051806101000160405280600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a6057805160ff1916838001178555611a8e565b82800160010185558215611a8e579182015b82811115611a8d578251825591602001919060010190611a72565b5b509050611a9b9190611a9f565b5090565b611ac191905b80821115611abd576000816000905550600101611aa5565b5090565b90565b600081359050611ad381612bcb565b92915050565b600081359050611ae881612be2565b92915050565b600081359050611afd81612bf9565b92915050565b600081519050611b1281612bf9565b92915050565b600082601f830112611b2957600080fd5b8135611b3c611b37826129ec565b6129bf565b91508082526020830160208301858383011115611b5857600080fd5b611b63838284612b78565b50505092915050565b600082601f830112611b7d57600080fd5b8135611b90611b8b82612a18565b6129bf565b91508082526020830160208301858383011115611bac57600080fd5b611bb7838284612b78565b50505092915050565b600081359050611bcf81612c10565b92915050565b600060208284031215611be757600080fd5b6000611bf584828501611ac4565b91505092915050565b60008060408385031215611c1157600080fd5b6000611c1f85828601611ac4565b9250506020611c3085828601611ac4565b9150509250929050565b600080600060608486031215611c4f57600080fd5b6000611c5d86828701611ac4565b9350506020611c6e86828701611ac4565b9250506040611c7f86828701611bc0565b9150509250925092565b60008060008060808587031215611c9f57600080fd5b6000611cad87828801611ac4565b9450506020611cbe87828801611ac4565b9350506040611ccf87828801611bc0565b925050606085013567ffffffffffffffff811115611cec57600080fd5b611cf887828801611b18565b91505092959194509250565b60008060408385031215611d1757600080fd5b6000611d2585828601611ac4565b9250506020611d3685828601611ad9565b9150509250929050565b60008060408385031215611d5357600080fd5b6000611d6185828601611ac4565b9250506020611d7285828601611bc0565b9150509250929050565b600060208284031215611d8e57600080fd5b6000611d9c84828501611aee565b91505092915050565b600060208284031215611db757600080fd5b6000611dc584828501611b03565b91505092915050565b60008060008060008060c08789031215611de757600080fd5b600087013567ffffffffffffffff811115611e0157600080fd5b611e0d89828a01611b6c565b965050602087013567ffffffffffffffff811115611e2a57600080fd5b611e3689828a01611b6c565b955050604087013567ffffffffffffffff811115611e5357600080fd5b611e5f89828a01611b6c565b945050606087013567ffffffffffffffff811115611e7c57600080fd5b611e8889828a01611b6c565b9350506080611e9989828a01611bc0565b92505060a0611eaa89828a01611ad9565b9150509295509295509295565b600060208284031215611ec957600080fd5b6000611ed784828501611bc0565b91505092915050565b6000611eec83836125b2565b905092915050565b611efd81612b42565b82525050565b611f0c81612ace565b82525050565b6000611f1d82612a51565b611f278185612a8a565b935083602082028501611f3985612a44565b8060005b85811015611f755784840389528151611f568582611ee0565b9450611f6183612a7d565b925060208a01995050600181019050611f3d565b50829750879550505050505092915050565b611f9081612ae0565b82525050565b611f9f81612ae0565b82525050565b6000611fb082612a5c565b611fba8185612a9b565b9350611fca818560208601612b87565b611fd381612bba565b840191505092915050565b6000611fe982612a72565b611ff38185612abd565b9350612003818560208601612b87565b61200c81612bba565b840191505092915050565b600061202282612a67565b61202c8185612aac565b935061203c818560208601612b87565b61204581612bba565b840191505092915050565b600061205d603283612abd565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006120c3601c83612abd565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612103602483612abd565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612169601983612abd565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006121a9601e83612abd565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b60006121e9602c83612abd565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061224f603883612abd565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b60006122b5602a83612abd565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061231b602983612abd565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612381602083612abd565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006123c1602c83612abd565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612427602983612abd565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061248d602b83612abd565b91507f4944454120434f4e5452414354204552524f523a204964656120494420616c7260008301527f65616479206578697374730000000000000000000000000000000000000000006020830152604082019050919050565b60006124f3602183612abd565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612559603183612abd565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000610100830160008301516125cb6000860182612677565b50602083015184820360208601526125e38282612017565b915050604083015184820360408601526125fd8282612017565b915050606083015184820360608601526126178282612017565b915050608083015184820360808601526126318282612017565b91505060a083015161264660a0860182612677565b5060c083015161265960c0860182612677565b5060e083015161266c60e0860182611f87565b508091505092915050565b61268081612b38565b82525050565b61268f81612b38565b82525050565b60006020820190506126aa6000830184611f03565b92915050565b60006080820190506126c56000830187611ef4565b6126d26020830186611f03565b6126df6040830185612686565b81810360608301526126f18184611fa5565b905095945050505050565b600060208201905081810360008301526127168184611f12565b905092915050565b60006020820190506127336000830184611f96565b92915050565b600060e0820190508181036000830152612753818a611fde565b905081810360208301526127678189611fde565b9050818103604083015261277b8188611fde565b9050818103606083015261278f8187611fde565b905061279e6080830186612686565b6127ab60a0830185612686565b6127b860c0830184611f96565b98975050505050505050565b600060208201905081810360008301526127dd81612050565b9050919050565b600060208201905081810360008301526127fd816120b6565b9050919050565b6000602082019050818103600083015261281d816120f6565b9050919050565b6000602082019050818103600083015261283d8161215c565b9050919050565b6000602082019050818103600083015261285d8161219c565b9050919050565b6000602082019050818103600083015261287d816121dc565b9050919050565b6000602082019050818103600083015261289d81612242565b9050919050565b600060208201905081810360008301526128bd816122a8565b9050919050565b600060208201905081810360008301526128dd8161230e565b9050919050565b600060208201905081810360008301526128fd81612374565b9050919050565b6000602082019050818103600083015261291d816123b4565b9050919050565b6000602082019050818103600083015261293d8161241a565b9050919050565b6000602082019050818103600083015261295d81612480565b9050919050565b6000602082019050818103600083015261297d816124e6565b9050919050565b6000602082019050818103600083015261299d8161254c565b9050919050565b60006020820190506129b96000830184612686565b92915050565b6000604051905081810181811067ffffffffffffffff821117156129e257600080fd5b8060405250919050565b600067ffffffffffffffff821115612a0357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612a2f57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612ad982612b18565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b4d82612b54565b9050919050565b6000612b5f82612b66565b9050919050565b6000612b7182612b18565b9050919050565b82818337600083830152505050565b60005b83811015612ba5578082015181840152602081019050612b8a565b83811115612bb4576000848401525b50505050565b6000601f19601f8301169050919050565b612bd481612ace565b8114612bdf57600080fd5b50565b612beb81612ae0565b8114612bf657600080fd5b50565b612c0281612aec565b8114612c0d57600080fd5b50565b612c1981612b38565b8114612c2457600080fd5b5056fea265627a7a72305820940ff11cd96a370141bab56e25ba69800ccce4760e2a705f1b8c2cc5aa4f329b6c6578706572696d656e74616cf50037",
  "sourceMap": "192:2128:0:-;;;464:1;445:20;;718:40:3;385:10;737:20;;718:18;;;:40;;:::i;:::-;2220::6;2094:10;2239:20;;2220:18;;;:40;;:::i;:::-;192:2128:0;;1442:190:3;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;6:364:-1:-;;166:67;230:2;225:3;166:67;;;159:74;;266:66;262:1;257:3;253:11;246:87;361:2;356:3;352:12;345:19;;152:218;;;;378:407;;569:2;558:9;554:18;546:26;;619:9;613:4;609:20;605:1;594:9;590:17;583:47;644:131;770:4;644:131;;;636:139;;540:245;;;;793:163;;908:6;903:3;896:19;945:4;940:3;936:14;921:29;;889:67;;;;;192:2128:0;;;;;;;",
  "deployedSourceMap": "192:2128:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;192:2128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1584:85:0;;;:::i;:::-;;;;;;;;;;;;;;;;4237:200:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3541:411;;;;;;;;;;;;;;;;:::i;:::-;;5877:285;;;;;;;;;;;;;;;;:::i;:::-;;6795:132;;;;;;;;;;;;;;;;:::i;:::-;;1062:516:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2897:223:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2471:207;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4730:243;;;;;;;;;;;;;;;;:::i;:::-;;531:522:0;;;;;;;;;;;;;;;;:::i;:::-;;7632:265:6;;;;;;;;;;;;;;;;:::i;:::-;;5295:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;915:133:3;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::oo;4237:200:6:-;4296:7;4323:16;4331:7;4323;:16::i;:::-;4315:73;;;;;;;;;;;;;;;;;;;;;;4406:15;:24;4422:7;4406:24;;;;;;;;;;;;;;;;;;;;;4399:31;;4237:200;;;:::o;3541:411::-;3604:13;3620:16;3628:7;3620;:16::i;:::-;3604:32;;3660:5;3654:11;;:2;:11;;;;3646:57;;;;;;;;;;;;;;;;;;;;;;3736:5;3722:19;;:10;:19;;;:58;;;;3745:35;3762:5;3769:10;3745:16;:35::i;:::-;3722:58;3714:148;;;;;;;;;;;;;;;;;;;;;;3900:2;3873:15;:24;3889:7;3873:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3937:7;3933:2;3917:28;;3926:5;3917:28;;;;;;;;;;;;3541:411;;;:::o;5877:285::-;6019:39;6038:10;6050:7;6019:18;:39::i;:::-;6011:101;;;;;;;;;;;;;;;;;;;;;;6123:32;6137:4;6143:2;6147:7;6123:13;:32::i;:::-;5877:285;;;:::o;6795:132::-;6881:39;6898:4;6904:2;6908:7;6881:39;;;;;;;;;;;;:16;:39::i;:::-;6795:132;;;:::o;1062:516:0:-;1109:19;1129:22;1161:21;1192:22;1224:17;1251:16;1277:15;1309:6;1318:1;1309:10;;1304:264;1323:5;:12;;;;1321:1;:14;1304:264;;;1373:3;1358:5;1364:1;1358:8;;;;;;;;;;;;;;;;;;:11;;;:18;1355:201;;;1399:5;1405:1;1399:8;;;;;;;;;;;;;;;;;;:18;;1419:5;1425:1;1419:8;;;;;;;;;;;;;;;;;;:17;;1438:5;1444:1;1438:8;;;;;;;;;;;;;;;;;;:16;;1456:5;1462:1;1456:8;;;;;;;;;;;;;;;;;;:17;;1475:5;1481:1;1475:8;;;;;;;;;;;;;;;;;;:21;;;1498:5;1504:1;1498:8;;;;;;;;;;;;;;;;;;:20;;;1520:5;1526:1;1520:8;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;1391:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:201;1337:3;;;;;;;1304:264;;;;1062:516;;;;;;;;;;:::o;2897:223:6:-;2952:7;2971:13;2987:11;:20;2999:7;2987:20;;;;;;;;;;;;;;;;;;;;;2971:36;;3042:1;3025:19;;:5;:19;;;;3017:73;;;;;;;;;;;;;;;;;;;;;;3108:5;3101:12;;;2897:223;;;:::o;2471:207::-;2526:7;2570:1;2553:19;;:5;:19;;;;2545:74;;;;;;;;;;;;;;;;;;;;;;2637:34;:17;:24;2655:5;2637:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2630:41;;2471:207;;;:::o;4730:243::-;4815:10;4809:16;;:2;:16;;;;4801:54;;;;;;;;;;;;;;;;;;;;;;4903:8;4866:18;:30;4885:10;4866:30;;;;;;;;;;;;;;;:34;4897:2;4866:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4953:2;4926:40;;4941:10;4926:40;;;4957:8;4926:40;;;;;;;;;;;;;;;4730:243;;:::o;531:522:0:-;712:22;720:13;;712:7;:22::i;:::-;711:23;703:78;;;;;;;;;;;;;;;;;;;;;;791:32;797:10;809:13;;791:5;:32::i;:::-;878:19;;:::i;:::-;900:92;;;;;;;;905:13;;900:92;;;;920:10;900:92;;;;932:9;900:92;;;;943:8;900:92;;;;952:9;900:92;;;;963:13;900:92;;;;977:1;900:92;;;;980:11;900:92;;;;;878:114;;1002:5;1013:7;1002:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1002:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:13;;:15;;;;;;;;;;;;;531:522;;;;;;;:::o;7632:265:6:-;7738:31;7751:4;7757:2;7761:7;7738:12;:31::i;:::-;7787:48;7810:4;7816:2;7820:7;7829:5;7787:22;:48::i;:::-;7779:111;;;;;;;;;;;;;;;;;;;;;;7632:265;;;;:::o;5295:145::-;5375:4;5398:18;:25;5417:5;5398:25;;;;;;;;;;;;;;;:35;5424:8;5398:35;;;;;;;;;;;;;;;;;;;;;;;;;5391:42;;5295:145;;;;:::o;8092:152::-;8149:4;8165:13;8181:11;:20;8193:7;8181:20;;;;;;;;;;;;;;;;;;;;;8165:36;;8235:1;8218:19;;:5;:19;;;;8211:26;;;8092:152;;;:::o;8605:329::-;8690:4;8714:16;8722:7;8714;:16::i;:::-;8706:73;;;;;;;;;;;;;;;;;;;;;;8789:13;8805:16;8813:7;8805;:16::i;:::-;8789:32;;8850:5;8839:16;;:7;:16;;;:51;;;;8883:7;8859:31;;:20;8871:7;8859:11;:20::i;:::-;:31;;;8839:51;:87;;;;8894:32;8911:5;8918:7;8894:16;:32::i;:::-;8839:87;8831:96;;;8605:329;;;;:::o;10751:447::-;10864:4;10844:24;;:16;10852:7;10844;:16::i;:::-;:24;;;10836:78;;;;;;;;;;;;;;;;;;;;;;10946:1;10932:16;;:2;:16;;;;10924:65;;;;;;;;;;;;;;;;;;;;;;11000:23;11015:7;11000:14;:23::i;:::-;11034:35;:17;:23;11052:4;11034:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11079:33;:17;:21;11097:2;11079:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11146:2;11123:11;:20;11135:7;11123:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11183:7;11179:2;11164:27;;11173:4;11164:27;;;;;;;;;;;;10751:447;;;:::o;1063:112:2:-;1128:7;1154;:14;;;1147:21;;1063:112;;;:::o;9179:327:6:-;9264:1;9250:16;;:2;:16;;;;9242:61;;;;;;;;;;;;;;;;;;;;;;9322:16;9330:7;9322;:16::i;:::-;9321:17;9313:58;;;;;;;;;;;;;;;;;;;;;;9405:2;9382:11;:20;9394:7;9382:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9417:33;:17;:21;9435:2;9417:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9491:7;9487:2;9466:33;;9483:1;9466:33;;;;;;;;;;;;9179:327;;:::o;11771:347::-;11892:4;11917:15;:2;:13;;;:15::i;:::-;11912:58;;11955:4;11948:11;;;;11912:58;11980:13;12012:2;11996:36;;;12033:10;12045:4;12051:7;12060:5;11996:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11996:70:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11996:70:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11996:70:6;;;;;;;;;11980:86;;713:10;12094:16;;12084:26;;;:6;:26;;;;12076:35;;;11771:347;;;;;;;:::o;12280:171::-;12379:1;12343:38;;:15;:24;12359:7;12343:24;;;;;;;;;;;;;;;;;;;;;:38;;;12339:106;;12432:1;12397:15;:24;12413:7;12397:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12339:106;12280:171;:::o;1276:108:2:-;1356:21;1375:1;1356:7;:14;;;:18;;:21;;;;:::i;:::-;1339:7;:14;;:38;;;;1276:108;:::o;1181:89::-;1262:1;1244:7;:14;;;:19;;;;;;;;;;;1181:89;:::o;542:413:9:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;1274:179:5:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;192:2128:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;352:6;339:20;330:29;;364:32;390:5;364:32;;;324:77;;;;;408:132;;491:6;485:13;476:22;;503:32;529:5;503:32;;;470:70;;;;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;997:442;;1099:3;1092:4;1084:6;1080:17;1076:27;1066:2;;1117:1;1114;1107:12;1066:2;1154:6;1141:20;1176:65;1191:49;1233:6;1191:49;;;1176:65;;;1167:74;;1261:6;1254:5;1247:21;1297:4;1289:6;1285:17;1330:4;1323:5;1319:16;1365:3;1356:6;1351:3;1347:16;1344:25;1341:2;;;1382:1;1379;1372:12;1341:2;1392:41;1426:6;1421:3;1416;1392:41;;;1059:380;;;;;;;;1447:130;;1527:6;1514:20;1505:29;;1539:33;1566:5;1539:33;;;1499:78;;;;;1584:241;;1688:2;1676:9;1667:7;1663:23;1659:32;1656:2;;;1704:1;1701;1694:12;1656:2;1739:1;1756:53;1801:7;1792:6;1781:9;1777:22;1756:53;;;1746:63;;1718:97;1650:175;;;;;1832:366;;;1953:2;1941:9;1932:7;1928:23;1924:32;1921:2;;;1969:1;1966;1959:12;1921:2;2004:1;2021:53;2066:7;2057:6;2046:9;2042:22;2021:53;;;2011:63;;1983:97;2111:2;2129:53;2174:7;2165:6;2154:9;2150:22;2129:53;;;2119:63;;2090:98;1915:283;;;;;;2205:491;;;;2343:2;2331:9;2322:7;2318:23;2314:32;2311:2;;;2359:1;2356;2349:12;2311:2;2394:1;2411:53;2456:7;2447:6;2436:9;2432:22;2411:53;;;2401:63;;2373:97;2501:2;2519:53;2564:7;2555:6;2544:9;2540:22;2519:53;;;2509:63;;2480:98;2609:2;2627:53;2672:7;2663:6;2652:9;2648:22;2627:53;;;2617:63;;2588:98;2305:391;;;;;;2703:721;;;;;2867:3;2855:9;2846:7;2842:23;2838:33;2835:2;;;2884:1;2881;2874:12;2835:2;2919:1;2936:53;2981:7;2972:6;2961:9;2957:22;2936:53;;;2926:63;;2898:97;3026:2;3044:53;3089:7;3080:6;3069:9;3065:22;3044:53;;;3034:63;;3005:98;3134:2;3152:53;3197:7;3188:6;3177:9;3173:22;3152:53;;;3142:63;;3113:98;3270:2;3259:9;3255:18;3242:32;3294:18;3286:6;3283:30;3280:2;;;3326:1;3323;3316:12;3280:2;3346:62;3400:7;3391:6;3380:9;3376:22;3346:62;;;3336:72;;3221:193;2829:595;;;;;;;;3431:360;;;3549:2;3537:9;3528:7;3524:23;3520:32;3517:2;;;3565:1;3562;3555:12;3517:2;3600:1;3617:53;3662:7;3653:6;3642:9;3638:22;3617:53;;;3607:63;;3579:97;3707:2;3725:50;3767:7;3758:6;3747:9;3743:22;3725:50;;;3715:60;;3686:95;3511:280;;;;;;3798:366;;;3919:2;3907:9;3898:7;3894:23;3890:32;3887:2;;;3935:1;3932;3925:12;3887:2;3970:1;3987:53;4032:7;4023:6;4012:9;4008:22;3987:53;;;3977:63;;3949:97;4077:2;4095:53;4140:7;4131:6;4120:9;4116:22;4095:53;;;4085:63;;4056:98;3881:283;;;;;;4171:239;;4274:2;4262:9;4253:7;4249:23;4245:32;4242:2;;;4290:1;4287;4280:12;4242:2;4325:1;4342:52;4386:7;4377:6;4366:9;4362:22;4342:52;;;4332:62;;4304:96;4236:174;;;;;4417:261;;4531:2;4519:9;4510:7;4506:23;4502:32;4499:2;;;4547:1;4544;4537:12;4499:2;4582:1;4599:63;4654:7;4645:6;4634:9;4630:22;4599:63;;;4589:73;;4561:107;4493:185;;;;;4685:1287;;;;;;;4911:3;4899:9;4890:7;4886:23;4882:33;4879:2;;;4928:1;4925;4918:12;4879:2;4991:1;4980:9;4976:17;4963:31;5014:18;5006:6;5003:30;5000:2;;;5046:1;5043;5036:12;5000:2;5066:63;5121:7;5112:6;5101:9;5097:22;5066:63;;;5056:73;;4942:193;5194:2;5183:9;5179:18;5166:32;5218:18;5210:6;5207:30;5204:2;;;5250:1;5247;5240:12;5204:2;5270:63;5325:7;5316:6;5305:9;5301:22;5270:63;;;5260:73;;5145:194;5398:2;5387:9;5383:18;5370:32;5422:18;5414:6;5411:30;5408:2;;;5454:1;5451;5444:12;5408:2;5474:63;5529:7;5520:6;5509:9;5505:22;5474:63;;;5464:73;;5349:194;5602:2;5591:9;5587:18;5574:32;5626:18;5618:6;5615:30;5612:2;;;5658:1;5655;5648:12;5612:2;5678:63;5733:7;5724:6;5713:9;5709:22;5678:63;;;5668:73;;5553:194;5778:3;5797:53;5842:7;5833:6;5822:9;5818:22;5797:53;;;5787:63;;5757:99;5887:3;5906:50;5948:7;5939:6;5928:9;5924:22;5906:50;;;5896:60;;5866:96;4873:1099;;;;;;;;;5979:241;;6083:2;6071:9;6062:7;6058:23;6054:32;6051:2;;;6099:1;6096;6089:12;6051:2;6134:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;;;6141:63;;6113:97;6045:175;;;;;6228:221;;6361:82;6439:3;6431:6;6361:82;;;6347:96;;6340:109;;;;;6457:142;6548:45;6587:5;6548:45;;;6543:3;6536:58;6530:69;;;6606:113;6689:24;6707:5;6689:24;;;6684:3;6677:37;6671:48;;;6775:976;;6952:70;7016:5;6952:70;;;7035:102;7130:6;7125:3;7035:102;;;7028:109;;7160:3;7202:4;7194:6;7190:17;7185:3;7181:27;7229:72;7295:5;7229:72;;;7321:7;7349:1;7334:378;7359:6;7356:1;7353:13;7334:378;;;7421:9;7415:4;7411:20;7406:3;7399:33;7466:6;7460:13;7488:96;7579:4;7564:13;7488:96;;;7480:104;;7601:76;7670:6;7601:76;;;7591:86;;7700:4;7695:3;7691:14;7684:21;;7391:321;7381:1;7378;7374:9;7369:14;;7334:378;;;7338:14;7725:4;7718:11;;7742:3;7735:10;;6931:820;;;;;;;;;;7759:94;7826:21;7841:5;7826:21;;;7821:3;7814:34;7808:45;;;7860:104;7937:21;7952:5;7937:21;;;7932:3;7925:34;7919:45;;;7971:343;;8081:38;8113:5;8081:38;;;8131:70;8194:6;8189:3;8131:70;;;8124:77;;8206:52;8251:6;8246:3;8239:4;8232:5;8228:16;8206:52;;;8279:29;8301:6;8279:29;;;8274:3;8270:39;8263:46;;8061:253;;;;;;8321:347;;8433:39;8466:5;8433:39;;;8484:71;8548:6;8543:3;8484:71;;;8477:78;;8560:52;8605:6;8600:3;8593:4;8586:5;8582:16;8560:52;;;8633:29;8655:6;8633:29;;;8628:3;8624:39;8617:46;;8413:255;;;;;;8675:319;;8773:35;8802:5;8773:35;;;8820:61;8874:6;8869:3;8820:61;;;8813:68;;8886:52;8931:6;8926:3;8919:4;8912:5;8908:16;8886:52;;;8959:29;8981:6;8959:29;;;8954:3;8950:39;8943:46;;8753:241;;;;;;9002:465;;9162:67;9226:2;9221:3;9162:67;;;9155:74;;9262:66;9258:1;9253:3;9249:11;9242:87;9363:66;9358:2;9353:3;9349:12;9342:88;9458:2;9453:3;9449:12;9442:19;;9148:319;;;;9476:364;;9636:67;9700:2;9695:3;9636:67;;;9629:74;;9736:66;9732:1;9727:3;9723:11;9716:87;9831:2;9826:3;9822:12;9815:19;;9622:218;;;;9849:465;;10009:67;10073:2;10068:3;10009:67;;;10002:74;;10109:66;10105:1;10100:3;10096:11;10089:87;10210:66;10205:2;10200:3;10196:12;10189:88;10305:2;10300:3;10296:12;10289:19;;9995:319;;;;10323:364;;10483:67;10547:2;10542:3;10483:67;;;10476:74;;10583:66;10579:1;10574:3;10570:11;10563:87;10678:2;10673:3;10669:12;10662:19;;10469:218;;;;10696:364;;10856:67;10920:2;10915:3;10856:67;;;10849:74;;10956:66;10952:1;10947:3;10943:11;10936:87;11051:2;11046:3;11042:12;11035:19;;10842:218;;;;11069:465;;11229:67;11293:2;11288:3;11229:67;;;11222:74;;11329:66;11325:1;11320:3;11316:11;11309:87;11430:66;11425:2;11420:3;11416:12;11409:88;11525:2;11520:3;11516:12;11509:19;;11215:319;;;;11543:465;;11703:67;11767:2;11762:3;11703:67;;;11696:74;;11803:66;11799:1;11794:3;11790:11;11783:87;11904:66;11899:2;11894:3;11890:12;11883:88;11999:2;11994:3;11990:12;11983:19;;11689:319;;;;12017:465;;12177:67;12241:2;12236:3;12177:67;;;12170:74;;12277:66;12273:1;12268:3;12264:11;12257:87;12378:66;12373:2;12368:3;12364:12;12357:88;12473:2;12468:3;12464:12;12457:19;;12163:319;;;;12491:465;;12651:67;12715:2;12710:3;12651:67;;;12644:74;;12751:66;12747:1;12742:3;12738:11;12731:87;12852:66;12847:2;12842:3;12838:12;12831:88;12947:2;12942:3;12938:12;12931:19;;12637:319;;;;12965:364;;13125:67;13189:2;13184:3;13125:67;;;13118:74;;13225:66;13221:1;13216:3;13212:11;13205:87;13320:2;13315:3;13311:12;13304:19;;13111:218;;;;13338:465;;13498:67;13562:2;13557:3;13498:67;;;13491:74;;13598:66;13594:1;13589:3;13585:11;13578:87;13699:66;13694:2;13689:3;13685:12;13678:88;13794:2;13789:3;13785:12;13778:19;;13484:319;;;;13812:465;;13972:67;14036:2;14031:3;13972:67;;;13965:74;;14072:66;14068:1;14063:3;14059:11;14052:87;14173:66;14168:2;14163:3;14159:12;14152:88;14268:2;14263:3;14259:12;14252:19;;13958:319;;;;14286:465;;14446:67;14510:2;14505:3;14446:67;;;14439:74;;14546:66;14542:1;14537:3;14533:11;14526:87;14647:66;14642:2;14637:3;14633:12;14626:88;14742:2;14737:3;14733:12;14726:19;;14432:319;;;;14760:465;;14920:67;14984:2;14979:3;14920:67;;;14913:74;;15020:66;15016:1;15011:3;15007:11;15000:87;15121:66;15116:2;15111:3;15107:12;15100:88;15216:2;15211:3;15207:12;15200:19;;14906:319;;;;15234:465;;15394:67;15458:2;15453:3;15394:67;;;15387:74;;15494:66;15490:1;15485:3;15481:11;15474:87;15595:66;15590:2;15585:3;15581:12;15574:88;15690:2;15685:3;15681:12;15674:19;;15380:319;;;;15750:1711;;15877:5;15872:3;15868:15;15959:3;15952:5;15948:15;15942:22;15970:62;16027:3;16022;16018:13;16004:12;15970:62;;;15898:140;16116:4;16109:5;16105:16;16099:23;16168:3;16162:4;16158:14;16151:4;16146:3;16142:14;16135:38;16188:69;16252:4;16238:12;16188:69;;;16180:77;;16048:221;16346:4;16339:5;16335:16;16329:23;16398:3;16392:4;16388:14;16381:4;16376:3;16372:14;16365:38;16418:69;16482:4;16468:12;16418:69;;;16410:77;;16279:220;16575:4;16568:5;16564:16;16558:23;16627:3;16621:4;16617:14;16610:4;16605:3;16601:14;16594:38;16647:69;16711:4;16697:12;16647:69;;;16639:77;;16509:219;16805:4;16798:5;16794:16;16788:23;16857:3;16851:4;16847:14;16840:4;16835:3;16831:14;16824:38;16877:69;16941:4;16927:12;16877:69;;;16869:77;;16738:220;17039:4;17032:5;17028:16;17022:23;17051:63;17108:4;17103:3;17099:14;17085:12;17051:63;;;16968:152;17200:4;17193:5;17189:16;17183:23;17212:63;17269:4;17264:3;17260:14;17246:12;17212:63;;;17130:151;17360:4;17353:5;17349:16;17343:23;17372:57;17423:4;17418:3;17414:14;17400:12;17372:57;;;17291:144;17452:4;17445:11;;15850:1611;;;;;;17468:103;17541:24;17559:5;17541:24;;;17536:3;17529:37;17523:48;;;17578:113;17661:24;17679:5;17661:24;;;17656:3;17649:37;17643:48;;;17698:213;;17816:2;17805:9;17801:18;17793:26;;17830:71;17898:1;17887:9;17883:17;17874:6;17830:71;;;17787:124;;;;;17918:647;;18146:3;18135:9;18131:19;18123:27;;18161:79;18237:1;18226:9;18222:17;18213:6;18161:79;;;18251:72;18319:2;18308:9;18304:18;18295:6;18251:72;;;18334;18402:2;18391:9;18387:18;18378:6;18334:72;;;18454:9;18448:4;18444:20;18439:2;18428:9;18424:18;18417:48;18479:76;18550:4;18541:6;18479:76;;;18471:84;;18117:448;;;;;;;;18572:425;;18772:2;18761:9;18757:18;18749:26;;18822:9;18816:4;18812:20;18808:1;18797:9;18793:17;18786:47;18847:140;18982:4;18973:6;18847:140;;;18839:148;;18743:254;;;;;19004:201;;19116:2;19105:9;19101:18;19093:26;;19130:65;19192:1;19181:9;19177:17;19168:6;19130:65;;;19087:118;;;;;19212:1223;;19572:3;19561:9;19557:19;19549:27;;19623:9;19617:4;19613:20;19609:1;19598:9;19594:17;19587:47;19648:78;19721:4;19712:6;19648:78;;;19640:86;;19774:9;19768:4;19764:20;19759:2;19748:9;19744:18;19737:48;19799:78;19872:4;19863:6;19799:78;;;19791:86;;19925:9;19919:4;19915:20;19910:2;19899:9;19895:18;19888:48;19950:78;20023:4;20014:6;19950:78;;;19942:86;;20076:9;20070:4;20066:20;20061:2;20050:9;20046:18;20039:48;20101:78;20174:4;20165:6;20101:78;;;20093:86;;20190:73;20258:3;20247:9;20243:19;20234:6;20190:73;;;20274;20342:3;20331:9;20327:19;20318:6;20274:73;;;20358:67;20420:3;20409:9;20405:19;20396:6;20358:67;;;19543:892;;;;;;;;;;;20442:407;;20633:2;20622:9;20618:18;20610:26;;20683:9;20677:4;20673:20;20669:1;20658:9;20654:17;20647:47;20708:131;20834:4;20708:131;;;20700:139;;20604:245;;;;20856:407;;21047:2;21036:9;21032:18;21024:26;;21097:9;21091:4;21087:20;21083:1;21072:9;21068:17;21061:47;21122:131;21248:4;21122:131;;;21114:139;;21018:245;;;;21270:407;;21461:2;21450:9;21446:18;21438:26;;21511:9;21505:4;21501:20;21497:1;21486:9;21482:17;21475:47;21536:131;21662:4;21536:131;;;21528:139;;21432:245;;;;21684:407;;21875:2;21864:9;21860:18;21852:26;;21925:9;21919:4;21915:20;21911:1;21900:9;21896:17;21889:47;21950:131;22076:4;21950:131;;;21942:139;;21846:245;;;;22098:407;;22289:2;22278:9;22274:18;22266:26;;22339:9;22333:4;22329:20;22325:1;22314:9;22310:17;22303:47;22364:131;22490:4;22364:131;;;22356:139;;22260:245;;;;22512:407;;22703:2;22692:9;22688:18;22680:26;;22753:9;22747:4;22743:20;22739:1;22728:9;22724:17;22717:47;22778:131;22904:4;22778:131;;;22770:139;;22674:245;;;;22926:407;;23117:2;23106:9;23102:18;23094:26;;23167:9;23161:4;23157:20;23153:1;23142:9;23138:17;23131:47;23192:131;23318:4;23192:131;;;23184:139;;23088:245;;;;23340:407;;23531:2;23520:9;23516:18;23508:26;;23581:9;23575:4;23571:20;23567:1;23556:9;23552:17;23545:47;23606:131;23732:4;23606:131;;;23598:139;;23502:245;;;;23754:407;;23945:2;23934:9;23930:18;23922:26;;23995:9;23989:4;23985:20;23981:1;23970:9;23966:17;23959:47;24020:131;24146:4;24020:131;;;24012:139;;23916:245;;;;24168:407;;24359:2;24348:9;24344:18;24336:26;;24409:9;24403:4;24399:20;24395:1;24384:9;24380:17;24373:47;24434:131;24560:4;24434:131;;;24426:139;;24330:245;;;;24582:407;;24773:2;24762:9;24758:18;24750:26;;24823:9;24817:4;24813:20;24809:1;24798:9;24794:17;24787:47;24848:131;24974:4;24848:131;;;24840:139;;24744:245;;;;24996:407;;25187:2;25176:9;25172:18;25164:26;;25237:9;25231:4;25227:20;25223:1;25212:9;25208:17;25201:47;25262:131;25388:4;25262:131;;;25254:139;;25158:245;;;;25410:407;;25601:2;25590:9;25586:18;25578:26;;25651:9;25645:4;25641:20;25637:1;25626:9;25622:17;25615:47;25676:131;25802:4;25676:131;;;25668:139;;25572:245;;;;25824:407;;26015:2;26004:9;26000:18;25992:26;;26065:9;26059:4;26055:20;26051:1;26040:9;26036:17;26029:47;26090:131;26216:4;26090:131;;;26082:139;;25986:245;;;;26238:407;;26429:2;26418:9;26414:18;26406:26;;26479:9;26473:4;26469:20;26465:1;26454:9;26450:17;26443:47;26504:131;26630:4;26504:131;;;26496:139;;26400:245;;;;26652:213;;26770:2;26759:9;26755:18;26747:26;;26784:71;26852:1;26841:9;26837:17;26828:6;26784:71;;;26741:124;;;;;26872:256;;26934:2;26928:9;26918:19;;26972:4;26964:6;26960:17;27071:6;27059:10;27056:22;27035:18;27023:10;27020:34;27017:62;27014:2;;;27092:1;27089;27082:12;27014:2;27112:10;27108:2;27101:22;26912:216;;;;;27135:258;;27278:18;27270:6;27267:30;27264:2;;;27310:1;27307;27300:12;27264:2;27354:4;27350:9;27343:4;27335:6;27331:17;27327:33;27319:41;;27383:4;27377;27373:15;27365:23;;27201:192;;;;27400:259;;27544:18;27536:6;27533:30;27530:2;;;27576:1;27573;27566:12;27530:2;27620:4;27616:9;27609:4;27601:6;27597:17;27593:33;27585:41;;27649:4;27643;27639:15;27631:23;;27467:192;;;;27669:139;;27795:4;27787:6;27783:17;27772:28;;27763:45;;;;27818:123;;27930:5;27924:12;27914:22;;27908:33;;;;27948:91;;28028:5;28022:12;28012:22;;28006:33;;;;28046:88;;28123:5;28117:12;28107:22;;28101:33;;;;28141:92;;28222:5;28216:12;28206:22;;28200:33;;;;28242:140;;28370:4;28362:6;28358:17;28347:28;;28339:43;;;;28392:194;;28538:6;28533:3;28526:19;28575:4;28570:3;28566:14;28551:29;;28519:67;;;;;28595:162;;28709:6;28704:3;28697:19;28746:4;28741:3;28737:14;28722:29;;28690:67;;;;;28766:153;;28871:6;28866:3;28859:19;28908:4;28903:3;28899:14;28884:29;;28852:67;;;;;28928:163;;29043:6;29038:3;29031:19;29080:4;29075:3;29071:14;29056:29;;29024:67;;;;;29099:91;;29161:24;29179:5;29161:24;;;29150:35;;29144:46;;;;29197:85;;29270:5;29263:13;29256:21;29245:32;;29239:43;;;;29289:144;;29361:66;29354:5;29350:78;29339:89;;29333:100;;;;29440:121;;29513:42;29506:5;29502:54;29491:65;;29485:76;;;;29568:72;;29630:5;29619:16;;29613:27;;;;29647:129;;29734:37;29765:5;29734:37;;;29721:50;;29715:61;;;;29783:121;;29862:37;29893:5;29862:37;;;29849:50;;29843:61;;;;29911:108;;29990:24;30008:5;29990:24;;;29977:37;;29971:48;;;;30027:145;30108:6;30103:3;30098;30085:30;30164:1;30155:6;30150:3;30146:16;30139:27;30078:94;;;;30181:268;30246:1;30253:101;30267:6;30264:1;30261:13;30253:101;;;30343:1;30338:3;30334:11;30328:18;30324:1;30319:3;30315:11;30308:39;30289:2;30286:1;30282:10;30277:15;;30253:101;;;30369:6;30366:1;30363:13;30360:2;;;30434:1;30425:6;30420:3;30416:16;30409:27;30360:2;30230:219;;;;;30457:97;;30545:2;30541:7;30536:2;30529:5;30525:14;30521:28;30511:38;;30505:49;;;;30562:117;30631:24;30649:5;30631:24;;;30624:5;30621:35;30611:2;;30670:1;30667;30660:12;30611:2;30605:74;;30686:111;30752:21;30767:5;30752:21;;;30745:5;30742:32;30732:2;;30788:1;30785;30778:12;30732:2;30726:71;;30804:115;30872:23;30889:5;30872:23;;;30865:5;30862:34;30852:2;;30910:1;30907;30900:12;30852:2;30846:73;;30926:117;30995:24;31013:5;30995:24;;;30988:5;30985:35;30975:2;;31034:1;31031;31024:12;30975:2;30969:74;",
  "source": "pragma solidity ^0.5.8;\npragma experimental ABIEncoderV2; //to return ideatype\n\nimport \"/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\ncontract Idea is ERC721 {\n    struct idea{\n        uint id;\n        string ideaTitle;\n        string ideaType;\n        string content;\n        string category;\n        uint initialValue;\n        uint actualValue;\n        bool setForSale;\n        }\n\n    uint ideaIdCounter=0;\n    idea[] ideas;//the array that contain all of the ideas\n\n    function addIdea(string memory _ideaTitle, string memory _ideaType, string memory _content, string memory _category, uint _initialValue, bool _setForSale) public {\n        require(!_exists(ideaIdCounter),\"IDEA CONTRACT ERROR: Idea ID already exists\");\n        _mint(msg.sender, ideaIdCounter);\n        //the actualValue will be 0 at first\n        idea memory newIdea = idea(ideaIdCounter, _ideaTitle, _ideaType, _content,_category, _initialValue,0, _setForSale);\n        ideas.push(newIdea);\n        ideaIdCounter++;\n    }\n\n\n\n\n    function getIdea(uint _id)public view returns( string memory title,string memory ideaType,\n        string memory content,\n        string memory category,\n        uint initialValue,\n        uint actualValue,\n        bool setForSale) {\n        for (uint i = 0; i<ideas.length; i++){\n            if(ideas[i].id == _id){\n            return (ideas[i].ideaTitle, ideas[i].ideaType, ideas[i].content, ideas[i].category, ideas[i].initialValue, ideas[i].actualValue, ideas[i].setForSale) ;\n            }\n          }\n        }\n\n    function getIdeas () public view returns (idea[] memory){\n        return ideas;\n    }\n\n\n    // function increaseActualValue(uint _id) public {\n    //     ideas[_id].actualValue += uint(0.0001);\n    // }\n\n\n    // function setIdeaForSale(uint _ideaId,bool _setForsale) public{\n    //     ideas[_ideaId].setForSale = _setForsale;\n    // }\n\n    // function buyIdea (uint _ideaId) public payable returns(bool success) {\n    //     require(_exists(_ideaId), \"IDEAS CONTRACT ERROR: There is no idea with this id\");\n    //     if(msg.sender.send(ideas[_ideaId].initialValue)){\n    //         safeTransferFrom(ownerOf(_ideaId), msg.sender, _ideaId);\n    //         success = true;}\n    //     else\n    //         success = false;\n\n\n    // }\n\n  }\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol",
  "ast": {
    "absolutePath": "/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol",
    "exportedSymbols": {
      "Idea": [
        161
      ]
    },
    "id": 162,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 162,
        "sourceUnit": 1028,
        "src": "80:110:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1027,
              "src": "209:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1027",
                "typeString": "contract ERC721"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "209:6:0"
          }
        ],
        "contractDependencies": [
          319,
          329,
          1027,
          1130
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 161,
        "linearizedBaseContracts": [
          161,
          1027,
          1130,
          319,
          329
        ],
        "name": "Idea",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Idea.idea",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 7,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "243:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "243:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "ideaTitle",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "260:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "260:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "name": "ideaType",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "286:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "286:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "name": "content",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "311:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "311:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "name": "category",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "335:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "name": "initialValue",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "360:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "360:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "name": "actualValue",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "387:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "name": "setForSale",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "413:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "413:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "idea",
            "nodeType": "StructDefinition",
            "scope": 161,
            "src": "222:217:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "ideaIdCounter",
            "nodeType": "VariableDeclaration",
            "scope": 161,
            "src": "445:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "445:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "464:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "name": "ideas",
            "nodeType": "VariableDeclaration",
            "scope": 161,
            "src": "471:12:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
              "typeString": "struct Idea.idea[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 26,
                "name": "idea",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 22,
                "src": "471:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                  "typeString": "struct Idea.idea"
                }
              },
              "id": 27,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "471:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage_ptr",
                "typeString": "struct Idea.idea[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "693:360:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "711:23:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 45,
                              "name": "ideaIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "720:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 44,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "712:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "712:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4944454120434f4e5452414354204552524f523a204964656120494420616c726561647920657869737473",
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4c4364064dbd8a7b3f8bc798f9b443675405ca554ed7529246a7d7b60674ef6",
                          "typeString": "literal_string \"IDEA CONTRACT ERROR: Idea ID already exists\""
                        },
                        "value": "IDEA CONTRACT ERROR: Idea ID already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4c4364064dbd8a7b3f8bc798f9b443675405ca554ed7529246a7d7b60674ef6",
                          "typeString": "literal_string \"IDEA CONTRACT ERROR: Idea ID already exists\""
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1183,
                        1184
                      ],
                      "referencedDeclaration": 1184,
                      "src": "703:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "703:78:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1180,
                          "src": "797:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "797:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "ideaIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "809:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "791:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "791:32:0"
                },
                {
                  "assignments": [
                    58
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58,
                      "name": "newIdea",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "878:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                        "typeString": "struct Idea.idea"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 57,
                        "name": "idea",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "878:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                          "typeString": "struct Idea.idea"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "ideaIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "905:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "_ideaTitle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "920:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "_ideaType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "932:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "_content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "943:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "952:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "_initialValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "963:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "977:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "_setForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "980:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "idea",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "900:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_idea_$22_storage_ptr_$",
                        "typeString": "type(struct Idea.idea storage pointer)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_idea_$22_memory",
                      "typeString": "struct Idea.idea memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "878:114:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "newIdea",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1013:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                          "typeString": "struct Idea.idea memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                          "typeString": "struct Idea.idea memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "ideas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1002:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                          "typeString": "struct Idea.idea storage ref[] storage ref"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1002:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_idea_$22_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Idea.idea storage ref) returns (uint256)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1031:15:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "ideaIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1031:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:15:0"
                }
              ]
            },
            "documentation": null,
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addIdea",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "name": "_ideaTitle",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "548:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "name": "_ideaType",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "574:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "name": "_content",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "599:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "name": "_category",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "623:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "_initialValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "648:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "name": "_setForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "668:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "547:138:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:0:0"
            },
            "scope": 161,
            "src": "531:522:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1294:284:0",
              "statements": [
                {
                  "body": {
                    "id": 148,
                    "nodeType": "Block",
                    "src": "1341:227:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 110,
                                "name": "ideas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "1358:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                  "typeString": "struct Idea.idea storage ref[] storage ref"
                                }
                              },
                              "id": 112,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 111,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "1364:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1358:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_idea_$22_storage",
                                "typeString": "struct Idea.idea storage ref"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "1358:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 114,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "1373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1358:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 147,
                        "nodeType": "IfStatement",
                        "src": "1355:201:0",
                        "trueBody": {
                          "id": 146,
                          "nodeType": "Block",
                          "src": "1377:179:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 116,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1399:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 118,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 117,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1405:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1399:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 119,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ideaTitle",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9,
                                    "src": "1399:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 120,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1419:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 122,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 121,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1425:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1419:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 123,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ideaType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11,
                                    "src": "1419:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 124,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1438:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 126,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 125,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1444:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1438:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 127,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "content",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13,
                                    "src": "1438:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 128,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1456:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 130,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 129,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1462:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1456:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 131,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "category",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15,
                                    "src": "1456:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 132,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1475:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 134,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 133,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1481:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1475:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 135,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initialValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17,
                                    "src": "1475:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 136,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1498:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 138,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 137,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1504:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1498:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 139,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "actualValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 19,
                                    "src": "1498:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 140,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1520:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 142,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 141,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1526:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1520:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 143,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "setForSale",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "1520:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 144,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1398:142:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_bool_$",
                                  "typeString": "tuple(string storage ref,string storage ref,string storage ref,string storage ref,uint256,uint256,bool)"
                                }
                              },
                              "functionReturnParameters": 98,
                              "id": 145,
                              "nodeType": "Return",
                              "src": "1391:149:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1321:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "ideas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1323:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                          "typeString": "struct Idea.idea storage ref[] storage ref"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1323:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1321:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "initializationExpression": {
                    "assignments": [
                      100
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 100,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "1309:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1309:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 102,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1318:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1309:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1337:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1337:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 109,
                    "nodeType": "ExpressionStatement",
                    "src": "1337:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1304:264:0"
                }
              ]
            },
            "documentation": null,
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdea",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1079:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:10:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1109:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "ideaType",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1129:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "content",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1161:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1192:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "name": "initialValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1224:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "name": "actualValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1251:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "name": "setForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1277:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1107:186:0"
            },
            "scope": 161,
            "src": "1062:516:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1640:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 157,
                    "name": "ideas",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "1657:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                      "typeString": "struct Idea.idea storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 156,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "1650:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdeas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1602:2:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1626:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_idea_$22_memory_$dyn_memory_ptr",
                    "typeString": "struct Idea.idea[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 153,
                      "name": "idea",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 22,
                      "src": "1626:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                        "typeString": "struct Idea.idea"
                      }
                    },
                    "id": 154,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1626:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage_ptr",
                      "typeString": "struct Idea.idea[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1625:15:0"
            },
            "scope": 161,
            "src": "1584:85:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 162,
        "src": "192:2128:0"
      }
    ],
    "src": "0:2328:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/omamah/Etherdea/Etherdea/contracts/Idea.sol",
    "exportedSymbols": {
      "Idea": [
        161
      ]
    },
    "id": 162,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "/Users/omamah/Etherdea/Etherdea/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 162,
        "sourceUnit": 1028,
        "src": "80:110:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1027,
              "src": "209:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1027",
                "typeString": "contract ERC721"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "209:6:0"
          }
        ],
        "contractDependencies": [
          319,
          329,
          1027,
          1130
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 161,
        "linearizedBaseContracts": [
          161,
          1027,
          1130,
          319,
          329
        ],
        "name": "Idea",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Idea.idea",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 7,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "243:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "243:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "ideaTitle",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "260:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "260:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "name": "ideaType",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "286:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "286:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "name": "content",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "311:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "311:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "name": "category",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "335:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "name": "initialValue",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "360:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "360:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "name": "actualValue",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "387:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "name": "setForSale",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "413:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "413:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "idea",
            "nodeType": "StructDefinition",
            "scope": 161,
            "src": "222:217:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "ideaIdCounter",
            "nodeType": "VariableDeclaration",
            "scope": 161,
            "src": "445:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "445:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "464:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "name": "ideas",
            "nodeType": "VariableDeclaration",
            "scope": 161,
            "src": "471:12:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
              "typeString": "struct Idea.idea[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 26,
                "name": "idea",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 22,
                "src": "471:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                  "typeString": "struct Idea.idea"
                }
              },
              "id": 27,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "471:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage_ptr",
                "typeString": "struct Idea.idea[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "693:360:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "711:23:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 45,
                              "name": "ideaIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "720:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 44,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "712:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "712:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4944454120434f4e5452414354204552524f523a204964656120494420616c726561647920657869737473",
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4c4364064dbd8a7b3f8bc798f9b443675405ca554ed7529246a7d7b60674ef6",
                          "typeString": "literal_string \"IDEA CONTRACT ERROR: Idea ID already exists\""
                        },
                        "value": "IDEA CONTRACT ERROR: Idea ID already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4c4364064dbd8a7b3f8bc798f9b443675405ca554ed7529246a7d7b60674ef6",
                          "typeString": "literal_string \"IDEA CONTRACT ERROR: Idea ID already exists\""
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1183,
                        1184
                      ],
                      "referencedDeclaration": 1184,
                      "src": "703:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "703:78:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1180,
                          "src": "797:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "797:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "ideaIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "809:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "791:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "791:32:0"
                },
                {
                  "assignments": [
                    58
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58,
                      "name": "newIdea",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "878:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                        "typeString": "struct Idea.idea"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 57,
                        "name": "idea",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "878:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                          "typeString": "struct Idea.idea"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "ideaIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "905:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "_ideaTitle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "920:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "_ideaType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "932:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "_content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "943:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "952:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "_initialValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "963:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "977:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "_setForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "980:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "idea",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "900:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_idea_$22_storage_ptr_$",
                        "typeString": "type(struct Idea.idea storage pointer)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_idea_$22_memory",
                      "typeString": "struct Idea.idea memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "878:114:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "newIdea",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1013:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                          "typeString": "struct Idea.idea memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_idea_$22_memory_ptr",
                          "typeString": "struct Idea.idea memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "ideas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1002:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                          "typeString": "struct Idea.idea storage ref[] storage ref"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1002:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_idea_$22_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Idea.idea storage ref) returns (uint256)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1031:15:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "ideaIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1031:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:15:0"
                }
              ]
            },
            "documentation": null,
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addIdea",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "name": "_ideaTitle",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "548:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "name": "_ideaType",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "574:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "name": "_content",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "599:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "name": "_category",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "623:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "_initialValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "648:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "name": "_setForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "668:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "547:138:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:0:0"
            },
            "scope": 161,
            "src": "531:522:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1294:284:0",
              "statements": [
                {
                  "body": {
                    "id": 148,
                    "nodeType": "Block",
                    "src": "1341:227:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 110,
                                "name": "ideas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "1358:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                  "typeString": "struct Idea.idea storage ref[] storage ref"
                                }
                              },
                              "id": 112,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 111,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "1364:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1358:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_idea_$22_storage",
                                "typeString": "struct Idea.idea storage ref"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "1358:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 114,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "1373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1358:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 147,
                        "nodeType": "IfStatement",
                        "src": "1355:201:0",
                        "trueBody": {
                          "id": 146,
                          "nodeType": "Block",
                          "src": "1377:179:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 116,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1399:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 118,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 117,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1405:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1399:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 119,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ideaTitle",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9,
                                    "src": "1399:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 120,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1419:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 122,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 121,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1425:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1419:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 123,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ideaType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11,
                                    "src": "1419:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 124,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1438:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 126,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 125,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1444:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1438:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 127,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "content",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13,
                                    "src": "1438:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 128,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1456:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 130,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 129,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1462:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1456:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 131,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "category",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15,
                                    "src": "1456:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 132,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1475:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 134,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 133,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1481:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1475:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 135,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initialValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17,
                                    "src": "1475:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 136,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1498:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 138,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 137,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1504:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1498:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 139,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "actualValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 19,
                                    "src": "1498:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 140,
                                        "name": "ideas",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "1520:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                                          "typeString": "struct Idea.idea storage ref[] storage ref"
                                        }
                                      },
                                      "id": 142,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 141,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "1526:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1520:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_idea_$22_storage",
                                        "typeString": "struct Idea.idea storage ref"
                                      }
                                    },
                                    "id": 143,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "setForSale",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "1520:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 144,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1398:142:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_bool_$",
                                  "typeString": "tuple(string storage ref,string storage ref,string storage ref,string storage ref,uint256,uint256,bool)"
                                }
                              },
                              "functionReturnParameters": 98,
                              "id": 145,
                              "nodeType": "Return",
                              "src": "1391:149:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1321:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "ideas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1323:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                          "typeString": "struct Idea.idea storage ref[] storage ref"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1323:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1321:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "initializationExpression": {
                    "assignments": [
                      100
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 100,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "1309:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1309:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 102,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1318:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1309:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1337:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1337:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 109,
                    "nodeType": "ExpressionStatement",
                    "src": "1337:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1304:264:0"
                }
              ]
            },
            "documentation": null,
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdea",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1079:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:10:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1109:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "ideaType",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1129:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "content",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1161:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1192:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "name": "initialValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1224:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "name": "actualValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1251:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "name": "setForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1277:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1107:186:0"
            },
            "scope": 161,
            "src": "1062:516:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1640:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 157,
                    "name": "ideas",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "1657:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage",
                      "typeString": "struct Idea.idea storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 156,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "1650:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdeas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1602:2:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1626:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_idea_$22_memory_$dyn_memory_ptr",
                    "typeString": "struct Idea.idea[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 153,
                      "name": "idea",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 22,
                      "src": "1626:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_idea_$22_storage_ptr",
                        "typeString": "struct Idea.idea"
                      }
                    },
                    "id": 154,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1626:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_idea_$22_storage_$dyn_storage_ptr",
                      "typeString": "struct Idea.idea[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1625:15:0"
            },
            "scope": 161,
            "src": "1584:85:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 162,
        "src": "192:2128:0"
      }
    ],
    "src": "0:2328:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xC7Fc7a87ff2d7D84c9f8e010f2E6664D04311b97",
      "transactionHash": "0x3b595fa91459853629275e29d03bb141824af3c9e1ef507773bac65a565c10b8"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-18T12:00:29.705Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}